{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Trabalho_final","provenance":[],"collapsed_sections":["1uFlKrWyO8wS","W6yTd8s5RbOS","nnVsLaacSQ6Z","aB39Y1FzS1AO"],"mount_file_id":"1kj-eMSQiRVqMIkqZ_wZHBJ2V4EeMXjIx","authorship_tag":"ABX9TyMW7R/QK6ifEsRthdO1uD9J"},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","metadata":{"id":"G6-jwUWMX1Ih"},"source":["# **Carregamento e Análise dos Dados**"]},{"cell_type":"code","metadata":{"id":"NqCuTjp-SAIO","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1626436422516,"user_tz":180,"elapsed":1173,"user":{"displayName":"Eliane Somavilla","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghy_NFVbfAPw__SCssozvPZEBaCTpwRMETXKEV--g=s64","userId":"12870892689360984547"}},"outputId":"5aa01b56-358e-4bf1-a7b8-b786e2e0a75e"},"source":["#carregamento de dados \n","\n","import pandas as pd\n","\n","df = pd.read_csv('/content/drive/My Drive/Exercicios aula PGCIN/Trabalho final/heart_dataset.csv',encoding='UTF-8', sep=',')\n","df.head()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>anaemia</th>\n","      <th>creatinine_phosphokinase</th>\n","      <th>diabetes</th>\n","      <th>ejection_fraction</th>\n","      <th>high_blood_pressure</th>\n","      <th>platelets</th>\n","      <th>serum_creatinine</th>\n","      <th>serum_sodium</th>\n","      <th>sex</th>\n","      <th>smoking</th>\n","      <th>time</th>\n","      <th>DEATH_EVENT</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>75.0</td>\n","      <td>0</td>\n","      <td>582</td>\n","      <td>0</td>\n","      <td>20</td>\n","      <td>1</td>\n","      <td>265000.00</td>\n","      <td>1.9</td>\n","      <td>130</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>4</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>55.0</td>\n","      <td>0</td>\n","      <td>7861</td>\n","      <td>0</td>\n","      <td>38</td>\n","      <td>0</td>\n","      <td>263358.03</td>\n","      <td>1.1</td>\n","      <td>136</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>6</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>65.0</td>\n","      <td>0</td>\n","      <td>146</td>\n","      <td>0</td>\n","      <td>20</td>\n","      <td>0</td>\n","      <td>162000.00</td>\n","      <td>1.3</td>\n","      <td>129</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>7</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>50.0</td>\n","      <td>1</td>\n","      <td>111</td>\n","      <td>0</td>\n","      <td>20</td>\n","      <td>0</td>\n","      <td>210000.00</td>\n","      <td>1.9</td>\n","      <td>137</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>7</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>65.0</td>\n","      <td>1</td>\n","      <td>160</td>\n","      <td>1</td>\n","      <td>20</td>\n","      <td>0</td>\n","      <td>327000.00</td>\n","      <td>2.7</td>\n","      <td>116</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>8</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["    age  anaemia  creatinine_phosphokinase  ...  smoking  time  DEATH_EVENT\n","0  75.0        0                       582  ...        0     4            1\n","1  55.0        0                      7861  ...        0     6            1\n","2  65.0        0                       146  ...        1     7            1\n","3  50.0        1                       111  ...        0     7            1\n","4  65.0        1                       160  ...        0     8            1\n","\n","[5 rows x 13 columns]"]},"metadata":{"tags":[]},"execution_count":2}]},{"cell_type":"markdown","metadata":{"id":"uSYgTUDNFj6J"},"source":["- idade: idade do paciente (anos)\n","- anemia: diminuição dos glóbulos vermelhos ou hemoglobina (booleana)\n","- pressão alta: se o paciente tem hipertensão (booleana)\n","- creatinina fosfoquinase (CPK): nível da enzima CPK no sangue (mcg / L)\n","- diabetes: se o paciente tem diabetes (booleano)\n","- fração de ejeção: porcentagem de sangue que sai do coração a cada contração (porcentagem)\n","- plaquetas: plaquetas no sangue (quiloplacas / mL)\n","- sexo: mulher ou homem (binário)\n","- creatinina sérica: nível de creatinina sérica no sangue (mg / dL)\n","- sódio sérico: nível de sódio sérico no sangue (mEq / L)\n","- tabagismo: se o paciente fuma ou não (booleano)\n","- tempo: período de acompanhamento (dias)\n","- evento de óbito [alvo]: se o paciente faleceu durante o período de acompanhamento (booleano)"]},{"cell_type":"code","metadata":{"id":"Z0-f3wVsNYjV","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1626436423041,"user_tz":180,"elapsed":220,"user":{"displayName":"Eliane Somavilla","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghy_NFVbfAPw__SCssozvPZEBaCTpwRMETXKEV--g=s64","userId":"12870892689360984547"}},"outputId":"33020770-41e5-4e7c-84be-157f1afe7796"},"source":["df.shape"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(299, 13)"]},"metadata":{"tags":[]},"execution_count":3}]},{"cell_type":"code","metadata":{"id":"UWs3k2uVZOYW","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1626436423064,"user_tz":180,"elapsed":236,"user":{"displayName":"Eliane Somavilla","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghy_NFVbfAPw__SCssozvPZEBaCTpwRMETXKEV--g=s64","userId":"12870892689360984547"}},"outputId":"88692572-71ec-4bdb-86ea-12a5825860d5"},"source":["#tipos de dados \n","df.dtypes"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["age                         float64\n","anaemia                       int64\n","creatinine_phosphokinase      int64\n","diabetes                      int64\n","ejection_fraction             int64\n","high_blood_pressure           int64\n","platelets                   float64\n","serum_creatinine            float64\n","serum_sodium                  int64\n","sex                           int64\n","smoking                       int64\n","time                          int64\n","DEATH_EVENT                   int64\n","dtype: object"]},"metadata":{"tags":[]},"execution_count":4}]},{"cell_type":"code","metadata":{"id":"9hCWSxAtIUuc","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1626436423069,"user_tz":180,"elapsed":238,"user":{"displayName":"Eliane Somavilla","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghy_NFVbfAPw__SCssozvPZEBaCTpwRMETXKEV--g=s64","userId":"12870892689360984547"}},"outputId":"330d412d-1ff4-43d8-f6c8-0559a47d2e3a"},"source":["#mediana de idade\n","age = df['age'].median() \n","print(age) \n","# mínima de idade\n","min = df['age'].min() \n","print(min) \n","# máxima de idade\n","max = df['age'].max() \n","print(max) \n","\n","#quantos pacientes com idade superior a 60 que morreram\n","df.query('age >=60  & DEATH_EVENT ==1').count()\n","\n","#quantos pacientes com idade inferior a 60 que morreram\n","df.query('age < 60  & DEATH_EVENT ==1').count()"],"execution_count":null,"outputs":[{"output_type":"stream","text":["60.0\n","40.0\n","95.0\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/plain":["age                         31\n","anaemia                     31\n","creatinine_phosphokinase    31\n","diabetes                    31\n","ejection_fraction           31\n","high_blood_pressure         31\n","platelets                   31\n","serum_creatinine            31\n","serum_sodium                31\n","sex                         31\n","smoking                     31\n","time                        31\n","DEATH_EVENT                 31\n","dtype: int64"]},"metadata":{"tags":[]},"execution_count":5}]},{"cell_type":"code","metadata":{"id":"46Cc7aMEObbb","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1626436423073,"user_tz":180,"elapsed":237,"user":{"displayName":"Eliane Somavilla","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghy_NFVbfAPw__SCssozvPZEBaCTpwRMETXKEV--g=s64","userId":"12870892689360984547"}},"outputId":"eadf19c5-b907-4e81-d247-9efa6207fdb4"},"source":["#média de tempo de acompanhamento\n","time = df['time'].mean() \n","print(time) \n","# mínima de tempo de acompanhamento\n","mintemp = df['time'].min() \n","print(mintemp) \n","# máxima de tempo de acompanhamento\n","maxtemp = df['time'].max() \n","print(maxtemp) "],"execution_count":null,"outputs":[{"output_type":"stream","text":["130.2608695652174\n","4\n","285\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"r1MTSyinv-ka","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1626436423075,"user_tz":180,"elapsed":233,"user":{"displayName":"Eliane Somavilla","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghy_NFVbfAPw__SCssozvPZEBaCTpwRMETXKEV--g=s64","userId":"12870892689360984547"}},"outputId":"64b3904b-460a-4412-c7e2-8d91ddddae9a"},"source":["#analise de genero: 194 homens e 105 mulheres\n","genero = df['sex'].value_counts() \n","print(genero) "],"execution_count":null,"outputs":[{"output_type":"stream","text":["1    194\n","0    105\n","Name: sex, dtype: int64\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"bLuOFgy8iDNm","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1626436423088,"user_tz":180,"elapsed":243,"user":{"displayName":"Eliane Somavilla","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghy_NFVbfAPw__SCssozvPZEBaCTpwRMETXKEV--g=s64","userId":"12870892689360984547"}},"outputId":"d934dc05-94af-49f3-9c6b-a38caa3d09e8"},"source":["#analise de fumantes = 96 fumantes\n","fumar = df['smoking'].value_counts() \n","print(fumar) \n","\n","#quantos pacientes que fumavam e morreram\n","df.query('smoking==1  & DEATH_EVENT ==1').count()"],"execution_count":null,"outputs":[{"output_type":"stream","text":["0    203\n","1     96\n","Name: smoking, dtype: int64\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/plain":["age                         30\n","anaemia                     30\n","creatinine_phosphokinase    30\n","diabetes                    30\n","ejection_fraction           30\n","high_blood_pressure         30\n","platelets                   30\n","serum_creatinine            30\n","serum_sodium                30\n","sex                         30\n","smoking                     30\n","time                        30\n","DEATH_EVENT                 30\n","dtype: int64"]},"metadata":{"tags":[]},"execution_count":8}]},{"cell_type":"code","metadata":{"id":"lqPpxLb7mzKM","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1626436423090,"user_tz":180,"elapsed":237,"user":{"displayName":"Eliane Somavilla","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghy_NFVbfAPw__SCssozvPZEBaCTpwRMETXKEV--g=s64","userId":"12870892689360984547"}},"outputId":"14bef093-9013-45b8-cc0e-2ee6cdd70ab3"},"source":["#analise de pressão alta = 105 com pressão alta\n","pressao = df['high_blood_pressure'].value_counts() \n","print(pressao) \n","\n","#quantos pacientes com pressão alta que morreram\n","df.query('high_blood_pressure==1  & DEATH_EVENT ==1').count()"],"execution_count":null,"outputs":[{"output_type":"stream","text":["0    194\n","1    105\n","Name: high_blood_pressure, dtype: int64\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/plain":["age                         39\n","anaemia                     39\n","creatinine_phosphokinase    39\n","diabetes                    39\n","ejection_fraction           39\n","high_blood_pressure         39\n","platelets                   39\n","serum_creatinine            39\n","serum_sodium                39\n","sex                         39\n","smoking                     39\n","time                        39\n","DEATH_EVENT                 39\n","dtype: int64"]},"metadata":{"tags":[]},"execution_count":9}]},{"cell_type":"code","metadata":{"id":"fK6LY6qEO08L","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1626436423092,"user_tz":180,"elapsed":215,"user":{"displayName":"Eliane Somavilla","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghy_NFVbfAPw__SCssozvPZEBaCTpwRMETXKEV--g=s64","userId":"12870892689360984547"}},"outputId":"7b5c1b05-c73b-4ffd-9e25-9fe50fbaa32f"},"source":["#analise de ótibos: 96 pacientes faleceram\n","obito = df['DEATH_EVENT'].value_counts() \n","print(obito) "],"execution_count":null,"outputs":[{"output_type":"stream","text":["0    203\n","1     96\n","Name: DEATH_EVENT, dtype: int64\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"QYsm5DVbQyVF","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1626436423094,"user_tz":180,"elapsed":209,"user":{"displayName":"Eliane Somavilla","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghy_NFVbfAPw__SCssozvPZEBaCTpwRMETXKEV--g=s64","userId":"12870892689360984547"}},"outputId":"a369a47e-d831-4cbb-a023-2b0a8c6e1c8a"},"source":["#mediana de tempo de acompanhamento\n","crea = df['serum_creatinine'].median() \n","print(crea) \n","# mínima de tempo de acompanhamento\n","mincrea = df['serum_creatinine'].min() \n","print(mincrea) \n","# máxima de tempo de acompanhamento\n","maxcrea = df['serum_creatinine'].max() \n","print(maxcrea) \n","#casos com cratinina acima de 1.5\n","df1= df[df.serum_creatinine > 1.5]\n","teste = df1['serum_creatinine'].count() \n","print(teste)\n","\n","#quantos pacientes com idade superior a 60 que  morreram\n","df.query('serum_creatinine>1.5  & DEATH_EVENT ==1').count()\n"],"execution_count":null,"outputs":[{"output_type":"stream","text":["1.1\n","0.5\n","9.4\n","67\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/plain":["age                         43\n","anaemia                     43\n","creatinine_phosphokinase    43\n","diabetes                    43\n","ejection_fraction           43\n","high_blood_pressure         43\n","platelets                   43\n","serum_creatinine            43\n","serum_sodium                43\n","sex                         43\n","smoking                     43\n","time                        43\n","DEATH_EVENT                 43\n","dtype: int64"]},"metadata":{"tags":[]},"execution_count":11}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"52V7jo8ee5UI","executionInfo":{"status":"ok","timestamp":1626436423100,"user_tz":180,"elapsed":201,"user":{"displayName":"Eliane Somavilla","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghy_NFVbfAPw__SCssozvPZEBaCTpwRMETXKEV--g=s64","userId":"12870892689360984547"}},"outputId":"c0f4ecf7-9594-4d33-c60e-38ef6a67d08b"},"source":["# conjunto de dados com creatina > 1.5\n","df1"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>anaemia</th>\n","      <th>creatinine_phosphokinase</th>\n","      <th>diabetes</th>\n","      <th>ejection_fraction</th>\n","      <th>high_blood_pressure</th>\n","      <th>platelets</th>\n","      <th>serum_creatinine</th>\n","      <th>serum_sodium</th>\n","      <th>sex</th>\n","      <th>smoking</th>\n","      <th>time</th>\n","      <th>DEATH_EVENT</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>75.0</td>\n","      <td>0</td>\n","      <td>582</td>\n","      <td>0</td>\n","      <td>20</td>\n","      <td>1</td>\n","      <td>265000.00</td>\n","      <td>1.9</td>\n","      <td>130</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>4</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>50.0</td>\n","      <td>1</td>\n","      <td>111</td>\n","      <td>0</td>\n","      <td>20</td>\n","      <td>0</td>\n","      <td>210000.00</td>\n","      <td>1.9</td>\n","      <td>137</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>7</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>65.0</td>\n","      <td>1</td>\n","      <td>160</td>\n","      <td>1</td>\n","      <td>20</td>\n","      <td>0</td>\n","      <td>327000.00</td>\n","      <td>2.7</td>\n","      <td>116</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>8</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>90.0</td>\n","      <td>1</td>\n","      <td>47</td>\n","      <td>0</td>\n","      <td>40</td>\n","      <td>1</td>\n","      <td>204000.00</td>\n","      <td>2.1</td>\n","      <td>132</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>8</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>80.0</td>\n","      <td>1</td>\n","      <td>123</td>\n","      <td>0</td>\n","      <td>35</td>\n","      <td>1</td>\n","      <td>388000.00</td>\n","      <td>9.4</td>\n","      <td>133</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>10</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>270</th>\n","      <td>44.0</td>\n","      <td>0</td>\n","      <td>582</td>\n","      <td>1</td>\n","      <td>30</td>\n","      <td>1</td>\n","      <td>263358.03</td>\n","      <td>1.6</td>\n","      <td>130</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>244</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>281</th>\n","      <td>70.0</td>\n","      <td>0</td>\n","      <td>582</td>\n","      <td>0</td>\n","      <td>40</td>\n","      <td>0</td>\n","      <td>51000.00</td>\n","      <td>2.7</td>\n","      <td>136</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>250</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>282</th>\n","      <td>42.0</td>\n","      <td>0</td>\n","      <td>64</td>\n","      <td>0</td>\n","      <td>30</td>\n","      <td>0</td>\n","      <td>215000.00</td>\n","      <td>3.8</td>\n","      <td>128</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>250</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>286</th>\n","      <td>60.0</td>\n","      <td>0</td>\n","      <td>253</td>\n","      <td>0</td>\n","      <td>35</td>\n","      <td>0</td>\n","      <td>279000.00</td>\n","      <td>1.7</td>\n","      <td>140</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>250</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>298</th>\n","      <td>50.0</td>\n","      <td>0</td>\n","      <td>196</td>\n","      <td>0</td>\n","      <td>45</td>\n","      <td>0</td>\n","      <td>395000.00</td>\n","      <td>1.6</td>\n","      <td>136</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>285</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>67 rows × 13 columns</p>\n","</div>"],"text/plain":["      age  anaemia  creatinine_phosphokinase  ...  smoking  time  DEATH_EVENT\n","0    75.0        0                       582  ...        0     4            1\n","3    50.0        1                       111  ...        0     7            1\n","4    65.0        1                       160  ...        0     8            1\n","5    90.0        1                        47  ...        1     8            1\n","9    80.0        1                       123  ...        1    10            1\n","..    ...      ...                       ...  ...      ...   ...          ...\n","270  44.0        0                       582  ...        1   244            0\n","281  70.0        0                       582  ...        1   250            0\n","282  42.0        0                        64  ...        1   250            0\n","286  60.0        0                       253  ...        0   250            0\n","298  50.0        0                       196  ...        1   285            0\n","\n","[67 rows x 13 columns]"]},"metadata":{"tags":[]},"execution_count":12}]},{"cell_type":"code","metadata":{"id":"zYp0Yx1Oxw7Q","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1626436423102,"user_tz":180,"elapsed":142,"user":{"displayName":"Eliane Somavilla","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghy_NFVbfAPw__SCssozvPZEBaCTpwRMETXKEV--g=s64","userId":"12870892689360984547"}},"outputId":"88b7450f-3d87-4d6d-8858-a861a3755c8f"},"source":["#quantos pacientes tinham anemia\n","df.query('anaemia ==1 ').count()\n","\n","#quantos pacientes tinham anemia e morreram\n","df.query('anaemia ==1 & DEATH_EVENT ==1').count()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["age                         46\n","anaemia                     46\n","creatinine_phosphokinase    46\n","diabetes                    46\n","ejection_fraction           46\n","high_blood_pressure         46\n","platelets                   46\n","serum_creatinine            46\n","serum_sodium                46\n","sex                         46\n","smoking                     46\n","time                        46\n","DEATH_EVENT                 46\n","dtype: int64"]},"metadata":{"tags":[]},"execution_count":13}]},{"cell_type":"code","metadata":{"id":"78zcCzjqx_81","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1626436423103,"user_tz":180,"elapsed":130,"user":{"displayName":"Eliane Somavilla","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghy_NFVbfAPw__SCssozvPZEBaCTpwRMETXKEV--g=s64","userId":"12870892689360984547"}},"outputId":"4b68321b-1b65-4c20-e157-e6cbcc07ffca"},"source":["#quantos pacientes com diabetes\n","df.query('diabetes ==1 ').count()\n","\n","#quantos pacientes com diabetes e morreram\n","df.query('diabetes ==1 & DEATH_EVENT ==1').count()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["age                         40\n","anaemia                     40\n","creatinine_phosphokinase    40\n","diabetes                    40\n","ejection_fraction           40\n","high_blood_pressure         40\n","platelets                   40\n","serum_creatinine            40\n","serum_sodium                40\n","sex                         40\n","smoking                     40\n","time                        40\n","DEATH_EVENT                 40\n","dtype: int64"]},"metadata":{"tags":[]},"execution_count":14}]},{"cell_type":"code","metadata":{"id":"kGn-DZ-f9oc7","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1626436423103,"user_tz":180,"elapsed":125,"user":{"displayName":"Eliane Somavilla","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghy_NFVbfAPw__SCssozvPZEBaCTpwRMETXKEV--g=s64","userId":"12870892689360984547"}},"outputId":"064ae579-3ee9-4d5a-89f4-71e57aff18e6"},"source":["#analise de pacientes com fração de ejeção do ventriculo esquerdo menor ou igual \n","df.query('ejection_fraction <= 40 ').count()\n","\n","#analise de pacientes com fração de ejeção do ventriculo esquerdo menor ou igual a 40 que morreram\n","df.query('ejection_fraction <= 40  & DEATH_EVENT ==1').count()\n"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["age                         77\n","anaemia                     77\n","creatinine_phosphokinase    77\n","diabetes                    77\n","ejection_fraction           77\n","high_blood_pressure         77\n","platelets                   77\n","serum_creatinine            77\n","serum_sodium                77\n","sex                         77\n","smoking                     77\n","time                        77\n","DEATH_EVENT                 77\n","dtype: int64"]},"metadata":{"tags":[]},"execution_count":15}]},{"cell_type":"code","metadata":{"id":"UudGk3b7-HW6","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1626436423104,"user_tz":180,"elapsed":121,"user":{"displayName":"Eliane Somavilla","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghy_NFVbfAPw__SCssozvPZEBaCTpwRMETXKEV--g=s64","userId":"12870892689360984547"}},"outputId":"3654bc8e-561f-43b4-fc67-9b79a26cc689"},"source":["#analise de pacientes com fração de ejeção do ventriculo esquerdo  menor ou igual a 40, idade  igual ou superior a 60 anos e com creatina maior que 1.5 que morreram\n","df.query('ejection_fraction <= 40  & serum_creatinine>1.5 & age>=60 & DEATH_EVENT ==1').count()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["age                         28\n","anaemia                     28\n","creatinine_phosphokinase    28\n","diabetes                    28\n","ejection_fraction           28\n","high_blood_pressure         28\n","platelets                   28\n","serum_creatinine            28\n","serum_sodium                28\n","sex                         28\n","smoking                     28\n","time                        28\n","DEATH_EVENT                 28\n","dtype: int64"]},"metadata":{"tags":[]},"execution_count":16}]},{"cell_type":"code","metadata":{"id":"ejwxrBULxlmr","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1626436423132,"user_tz":180,"elapsed":139,"user":{"displayName":"Eliane Somavilla","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghy_NFVbfAPw__SCssozvPZEBaCTpwRMETXKEV--g=s64","userId":"12870892689360984547"}},"outputId":"77174413-e4a7-4bfd-f23c-01e231f2da48"},"source":["#média de plaquetas\n","plaquetas = df['platelets'].mean() \n","print(plaquetas) \n","# mínima de plaquetas\n","minplac = df['platelets'].min() \n","print(minplac) \n","# máxima de plaquetas\n","maxplac = df['platelets'].max() \n","print(maxplac) \n"],"execution_count":null,"outputs":[{"output_type":"stream","text":["263358.02926421416\n","25100.0\n","850000.0\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"FGhnMqJyo8SR","executionInfo":{"status":"ok","timestamp":1626436423134,"user_tz":180,"elapsed":137,"user":{"displayName":"Eliane Somavilla","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghy_NFVbfAPw__SCssozvPZEBaCTpwRMETXKEV--g=s64","userId":"12870892689360984547"}},"outputId":"3c3d938a-d74e-4ba5-ccf2-fed6e5e6ecc1"},"source":["#média de sódio\n","sodio = df['serum_sodium'].mean() \n","print(sodio) \n","# mínima de sódio\n","minsodio = df['serum_sodium'].min() \n","print(minsodio) \n","# máxima de sódio\n","maxsodio = df['serum_sodium'].max() \n","print(maxsodio) \n","\n","#quantos pacientes com sódio em niveis baixos morreram\n","df.query('serum_sodium < 136  & DEATH_EVENT ==1 ').count()\n","\n","#quantos pacientes com sódio em niveis altos\n","#df.query('serum_sodium >= 136 & DEATH_EVENT ==1 ').count()\n"],"execution_count":null,"outputs":[{"output_type":"stream","text":["136.62541806020067\n","113\n","148\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/plain":["age                         48\n","anaemia                     48\n","creatinine_phosphokinase    48\n","diabetes                    48\n","ejection_fraction           48\n","high_blood_pressure         48\n","platelets                   48\n","serum_creatinine            48\n","serum_sodium                48\n","sex                         48\n","smoking                     48\n","time                        48\n","DEATH_EVENT                 48\n","dtype: int64"]},"metadata":{"tags":[]},"execution_count":18}]},{"cell_type":"code","metadata":{"id":"aBkvt5uC0kqN","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1626436423574,"user_tz":180,"elapsed":570,"user":{"displayName":"Eliane Somavilla","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghy_NFVbfAPw__SCssozvPZEBaCTpwRMETXKEV--g=s64","userId":"12870892689360984547"}},"outputId":"5f3f61f6-7eec-4659-f558-11a73303545f"},"source":["#quantos pacientes com plaquetas em niveis normais morreram\n","#df.query('platelets >= 150000  & platelets <=400000 & DEATH_EVENT ==1').count()\n","\n","#quantos pacientes com plaquetas em niveis altos morreram\n","df.query('platelets > 400000  & DEATH_EVENT ==1').count()\n","\n","#quantos pacientes com plaquetas em niveis baixos morreram\n","#df.query('platelets < 150000  & DEATH_EVENT ==1').count()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["age                         6\n","anaemia                     6\n","creatinine_phosphokinase    6\n","diabetes                    6\n","ejection_fraction           6\n","high_blood_pressure         6\n","platelets                   6\n","serum_creatinine            6\n","serum_sodium                6\n","sex                         6\n","smoking                     6\n","time                        6\n","DEATH_EVENT                 6\n","dtype: int64"]},"metadata":{"tags":[]},"execution_count":19}]},{"cell_type":"code","metadata":{"id":"JA7zmmk1u-ZL","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1626436423588,"user_tz":180,"elapsed":41,"user":{"displayName":"Eliane Somavilla","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghy_NFVbfAPw__SCssozvPZEBaCTpwRMETXKEV--g=s64","userId":"12870892689360984547"}},"outputId":"abc8625d-dbbc-4e32-e6b9-826e2a4ffe38"},"source":["#função para classificar as plaquetas entre valores menores que 150.000, entre 150.000 e 400.000 e maiores que 400.000\n","def subistituir(item):\n","    if(item < 150000):\n","    \treturn 1\n","    if(item <= 400000):\n","    \treturn 2 \n","    return 3\n","df['platelets']=df['platelets'].map(subistituir)\n","df"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>anaemia</th>\n","      <th>creatinine_phosphokinase</th>\n","      <th>diabetes</th>\n","      <th>ejection_fraction</th>\n","      <th>high_blood_pressure</th>\n","      <th>platelets</th>\n","      <th>serum_creatinine</th>\n","      <th>serum_sodium</th>\n","      <th>sex</th>\n","      <th>smoking</th>\n","      <th>time</th>\n","      <th>DEATH_EVENT</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>75.0</td>\n","      <td>0</td>\n","      <td>582</td>\n","      <td>0</td>\n","      <td>20</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1.9</td>\n","      <td>130</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>4</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>55.0</td>\n","      <td>0</td>\n","      <td>7861</td>\n","      <td>0</td>\n","      <td>38</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1.1</td>\n","      <td>136</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>6</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>65.0</td>\n","      <td>0</td>\n","      <td>146</td>\n","      <td>0</td>\n","      <td>20</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1.3</td>\n","      <td>129</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>7</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>50.0</td>\n","      <td>1</td>\n","      <td>111</td>\n","      <td>0</td>\n","      <td>20</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1.9</td>\n","      <td>137</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>7</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>65.0</td>\n","      <td>1</td>\n","      <td>160</td>\n","      <td>1</td>\n","      <td>20</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>2.7</td>\n","      <td>116</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>8</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>294</th>\n","      <td>62.0</td>\n","      <td>0</td>\n","      <td>61</td>\n","      <td>1</td>\n","      <td>38</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1.1</td>\n","      <td>143</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>270</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>295</th>\n","      <td>55.0</td>\n","      <td>0</td>\n","      <td>1820</td>\n","      <td>0</td>\n","      <td>38</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1.2</td>\n","      <td>139</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>271</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>296</th>\n","      <td>45.0</td>\n","      <td>0</td>\n","      <td>2060</td>\n","      <td>1</td>\n","      <td>60</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0.8</td>\n","      <td>138</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>278</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>297</th>\n","      <td>45.0</td>\n","      <td>0</td>\n","      <td>2413</td>\n","      <td>0</td>\n","      <td>38</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1.4</td>\n","      <td>140</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>280</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>298</th>\n","      <td>50.0</td>\n","      <td>0</td>\n","      <td>196</td>\n","      <td>0</td>\n","      <td>45</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1.6</td>\n","      <td>136</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>285</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>299 rows × 13 columns</p>\n","</div>"],"text/plain":["      age  anaemia  creatinine_phosphokinase  ...  smoking  time  DEATH_EVENT\n","0    75.0        0                       582  ...        0     4            1\n","1    55.0        0                      7861  ...        0     6            1\n","2    65.0        0                       146  ...        1     7            1\n","3    50.0        1                       111  ...        0     7            1\n","4    65.0        1                       160  ...        0     8            1\n","..    ...      ...                       ...  ...      ...   ...          ...\n","294  62.0        0                        61  ...        1   270            0\n","295  55.0        0                      1820  ...        0   271            0\n","296  45.0        0                      2060  ...        0   278            0\n","297  45.0        0                      2413  ...        1   280            0\n","298  50.0        0                       196  ...        1   285            0\n","\n","[299 rows x 13 columns]"]},"metadata":{"tags":[]},"execution_count":20}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_A4LXOiqOSC4","executionInfo":{"status":"ok","timestamp":1626436423590,"user_tz":180,"elapsed":38,"user":{"displayName":"Eliane Somavilla","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghy_NFVbfAPw__SCssozvPZEBaCTpwRMETXKEV--g=s64","userId":"12870892689360984547"}},"outputId":"2926b86c-5c3c-41f3-ea05-867986db703a"},"source":["df.query('platelets ==3 ').count()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["age                         20\n","anaemia                     20\n","creatinine_phosphokinase    20\n","diabetes                    20\n","ejection_fraction           20\n","high_blood_pressure         20\n","platelets                   20\n","serum_creatinine            20\n","serum_sodium                20\n","sex                         20\n","smoking                     20\n","time                        20\n","DEATH_EVENT                 20\n","dtype: int64"]},"metadata":{"tags":[]},"execution_count":21}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RP2VjnhhFUgk","executionInfo":{"status":"ok","timestamp":1626436423597,"user_tz":180,"elapsed":40,"user":{"displayName":"Eliane Somavilla","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghy_NFVbfAPw__SCssozvPZEBaCTpwRMETXKEV--g=s64","userId":"12870892689360984547"}},"outputId":"0a187da8-9e2e-42c6-b7e3-4b545658e2d0"},"source":["\n","#média de creatinine_phosphokinase\n","cpk = df['creatinine_phosphokinase'].mean() \n","print(cpk) \n","# mínima de creatinine_phosphokinase\n","mincpk = df['creatinine_phosphokinase'].min() \n","print(mincpk) \n","# máxima de creatinine_phosphokinase\n","maxcpk= df['creatinine_phosphokinase'].max() \n","print(maxcpk) \n","\n","#quantos pacientes  Homens com creatinine_phosphokinase em niveis altos morreram\n","#df.query('creatinine_phosphokinase >= 32 & creatinine_phosphokinase <= 294 & sex == 1   ').count()\n","df.query('  creatinine_phosphokinase > 294 & sex == 1   ').count()\n","\n","#quantos pacientes  Mulheres com creatinine_phosphokinase em niveis altos morreram\n","#df.query('creatinine_phosphokinase >=33 & creatinine_phosphokinase <= 211  & sex == 0  ').count()\n","#df.query('creatinine_phosphokinase > 211  & sex == 0  ').count()"],"execution_count":null,"outputs":[{"output_type":"stream","text":["581.8394648829432\n","23\n","7861\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/plain":["age                         91\n","anaemia                     91\n","creatinine_phosphokinase    91\n","diabetes                    91\n","ejection_fraction           91\n","high_blood_pressure         91\n","platelets                   91\n","serum_creatinine            91\n","serum_sodium                91\n","sex                         91\n","smoking                     91\n","time                        91\n","DEATH_EVENT                 91\n","dtype: int64"]},"metadata":{"tags":[]},"execution_count":22}]},{"cell_type":"markdown","metadata":{"id":"fZB8cCjtdtoS"},"source":["# **Conjuntos X e y**"]},{"cell_type":"code","metadata":{"id":"wZK7GIlUN3Y_","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1626436424886,"user_tz":180,"elapsed":1327,"user":{"displayName":"Eliane Somavilla","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghy_NFVbfAPw__SCssozvPZEBaCTpwRMETXKEV--g=s64","userId":"12870892689360984547"}},"outputId":"471715a2-e882-4eaf-b2f1-860673057b1e"},"source":["#váriáveis dependentes sem o tempo de acompanhamento e o genero dos pacientes\n","\n","X1 = df.iloc[:,0:9]\n","X2 = df.iloc[:,10:11]\n","X = pd.concat([X1,X2],axis=1)\n","X"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>anaemia</th>\n","      <th>creatinine_phosphokinase</th>\n","      <th>diabetes</th>\n","      <th>ejection_fraction</th>\n","      <th>high_blood_pressure</th>\n","      <th>platelets</th>\n","      <th>serum_creatinine</th>\n","      <th>serum_sodium</th>\n","      <th>smoking</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>75.0</td>\n","      <td>0</td>\n","      <td>582</td>\n","      <td>0</td>\n","      <td>20</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1.9</td>\n","      <td>130</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>55.0</td>\n","      <td>0</td>\n","      <td>7861</td>\n","      <td>0</td>\n","      <td>38</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1.1</td>\n","      <td>136</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>65.0</td>\n","      <td>0</td>\n","      <td>146</td>\n","      <td>0</td>\n","      <td>20</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1.3</td>\n","      <td>129</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>50.0</td>\n","      <td>1</td>\n","      <td>111</td>\n","      <td>0</td>\n","      <td>20</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1.9</td>\n","      <td>137</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>65.0</td>\n","      <td>1</td>\n","      <td>160</td>\n","      <td>1</td>\n","      <td>20</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>2.7</td>\n","      <td>116</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>294</th>\n","      <td>62.0</td>\n","      <td>0</td>\n","      <td>61</td>\n","      <td>1</td>\n","      <td>38</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1.1</td>\n","      <td>143</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>295</th>\n","      <td>55.0</td>\n","      <td>0</td>\n","      <td>1820</td>\n","      <td>0</td>\n","      <td>38</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1.2</td>\n","      <td>139</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>296</th>\n","      <td>45.0</td>\n","      <td>0</td>\n","      <td>2060</td>\n","      <td>1</td>\n","      <td>60</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0.8</td>\n","      <td>138</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>297</th>\n","      <td>45.0</td>\n","      <td>0</td>\n","      <td>2413</td>\n","      <td>0</td>\n","      <td>38</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1.4</td>\n","      <td>140</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>298</th>\n","      <td>50.0</td>\n","      <td>0</td>\n","      <td>196</td>\n","      <td>0</td>\n","      <td>45</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1.6</td>\n","      <td>136</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>299 rows × 10 columns</p>\n","</div>"],"text/plain":["      age  anaemia  ...  serum_sodium  smoking\n","0    75.0        0  ...           130        0\n","1    55.0        0  ...           136        0\n","2    65.0        0  ...           129        1\n","3    50.0        1  ...           137        0\n","4    65.0        1  ...           116        0\n","..    ...      ...  ...           ...      ...\n","294  62.0        0  ...           143        1\n","295  55.0        0  ...           139        0\n","296  45.0        0  ...           138        0\n","297  45.0        0  ...           140        1\n","298  50.0        0  ...           136        1\n","\n","[299 rows x 10 columns]"]},"metadata":{"tags":[]},"execution_count":23}]},{"cell_type":"code","metadata":{"id":"9olf09XXYyQv","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1626436424905,"user_tz":180,"elapsed":117,"user":{"displayName":"Eliane Somavilla","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghy_NFVbfAPw__SCssozvPZEBaCTpwRMETXKEV--g=s64","userId":"12870892689360984547"}},"outputId":"1f9c4856-15da-43a8-b85e-ad8a689ee9d0"},"source":["#váriáveis independentes\n","\n","y = df.iloc[:,12:13]\n","y.head(1)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>DEATH_EVENT</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   DEATH_EVENT\n","0            1"]},"metadata":{"tags":[]},"execution_count":24}]},{"cell_type":"markdown","metadata":{"id":"SCOH4MReYNcS"},"source":["# **Analisando as melhores features (variáveis independentes) e Realizando Pré - processamento**"]},{"cell_type":"code","metadata":{"id":"iTGJ_S1elPJS","colab":{"base_uri":"https://localhost:8080/","height":473},"executionInfo":{"status":"ok","timestamp":1626436427399,"user_tz":180,"elapsed":307,"user":{"displayName":"Eliane Somavilla","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghy_NFVbfAPw__SCssozvPZEBaCTpwRMETXKEV--g=s64","userId":"12870892689360984547"}},"outputId":"7c878e5e-882f-4543-e7b3-c1a502d62f21"},"source":["#verificar as  variáveis mais importantes considerando X e y\n","\n","#O Scikit-learn fornece a função SelectkBest() que pode ser usada para selecionar as melhores variáveis de um conjunto de dados. Informamos para o parâmetro k o número de recursos a serem selecionados como os mais importantes.\n","from sklearn.feature_selection import SelectKBest\n","#avaliação das melhores features\n","classif = SelectKBest( k=10)\n","fit = classif.fit(X,y)\n","features = fit.transform(X)\n","# Visualizando os indices das features (variáveis independentes) mais importantes\n","cols = fit.get_support(indices=True)\n","df.iloc[:,cols]\n"],"execution_count":null,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.7/dist-packages/sklearn/utils/validation.py:760: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  y = column_or_1d(y, warn=True)\n"],"name":"stderr"},{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>anaemia</th>\n","      <th>creatinine_phosphokinase</th>\n","      <th>diabetes</th>\n","      <th>ejection_fraction</th>\n","      <th>high_blood_pressure</th>\n","      <th>platelets</th>\n","      <th>serum_creatinine</th>\n","      <th>serum_sodium</th>\n","      <th>sex</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>75.0</td>\n","      <td>0</td>\n","      <td>582</td>\n","      <td>0</td>\n","      <td>20</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1.9</td>\n","      <td>130</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>55.0</td>\n","      <td>0</td>\n","      <td>7861</td>\n","      <td>0</td>\n","      <td>38</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1.1</td>\n","      <td>136</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>65.0</td>\n","      <td>0</td>\n","      <td>146</td>\n","      <td>0</td>\n","      <td>20</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1.3</td>\n","      <td>129</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>50.0</td>\n","      <td>1</td>\n","      <td>111</td>\n","      <td>0</td>\n","      <td>20</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1.9</td>\n","      <td>137</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>65.0</td>\n","      <td>1</td>\n","      <td>160</td>\n","      <td>1</td>\n","      <td>20</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>2.7</td>\n","      <td>116</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>294</th>\n","      <td>62.0</td>\n","      <td>0</td>\n","      <td>61</td>\n","      <td>1</td>\n","      <td>38</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1.1</td>\n","      <td>143</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>295</th>\n","      <td>55.0</td>\n","      <td>0</td>\n","      <td>1820</td>\n","      <td>0</td>\n","      <td>38</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1.2</td>\n","      <td>139</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>296</th>\n","      <td>45.0</td>\n","      <td>0</td>\n","      <td>2060</td>\n","      <td>1</td>\n","      <td>60</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0.8</td>\n","      <td>138</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>297</th>\n","      <td>45.0</td>\n","      <td>0</td>\n","      <td>2413</td>\n","      <td>0</td>\n","      <td>38</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1.4</td>\n","      <td>140</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>298</th>\n","      <td>50.0</td>\n","      <td>0</td>\n","      <td>196</td>\n","      <td>0</td>\n","      <td>45</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1.6</td>\n","      <td>136</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>299 rows × 10 columns</p>\n","</div>"],"text/plain":["      age  anaemia  ...  serum_sodium  sex\n","0    75.0        0  ...           130    1\n","1    55.0        0  ...           136    1\n","2    65.0        0  ...           129    1\n","3    50.0        1  ...           137    1\n","4    65.0        1  ...           116    0\n","..    ...      ...  ...           ...  ...\n","294  62.0        0  ...           143    1\n","295  55.0        0  ...           139    0\n","296  45.0        0  ...           138    0\n","297  45.0        0  ...           140    1\n","298  50.0        0  ...           136    1\n","\n","[299 rows x 10 columns]"]},"metadata":{"tags":[]},"execution_count":25}]},{"cell_type":"code","metadata":{"id":"2iCMnJWlX6A6","colab":{"base_uri":"https://localhost:8080/","height":419},"executionInfo":{"status":"ok","timestamp":1626436427401,"user_tz":180,"elapsed":253,"user":{"displayName":"Eliane Somavilla","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghy_NFVbfAPw__SCssozvPZEBaCTpwRMETXKEV--g=s64","userId":"12870892689360984547"}},"outputId":"2eec758c-df28-4c4f-e21e-496aa341115b"},"source":["#váriáveis dependentes sem o tempo de acompanhamento e o genero dos pacientes\n","\n","X1 = df.iloc[:,0:9]\n","X2 = df.iloc[:,10:11]\n","X = pd.concat([X1,X2],axis=1)\n","X"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>anaemia</th>\n","      <th>creatinine_phosphokinase</th>\n","      <th>diabetes</th>\n","      <th>ejection_fraction</th>\n","      <th>high_blood_pressure</th>\n","      <th>platelets</th>\n","      <th>serum_creatinine</th>\n","      <th>serum_sodium</th>\n","      <th>smoking</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>75.0</td>\n","      <td>0</td>\n","      <td>582</td>\n","      <td>0</td>\n","      <td>20</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1.9</td>\n","      <td>130</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>55.0</td>\n","      <td>0</td>\n","      <td>7861</td>\n","      <td>0</td>\n","      <td>38</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1.1</td>\n","      <td>136</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>65.0</td>\n","      <td>0</td>\n","      <td>146</td>\n","      <td>0</td>\n","      <td>20</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1.3</td>\n","      <td>129</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>50.0</td>\n","      <td>1</td>\n","      <td>111</td>\n","      <td>0</td>\n","      <td>20</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1.9</td>\n","      <td>137</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>65.0</td>\n","      <td>1</td>\n","      <td>160</td>\n","      <td>1</td>\n","      <td>20</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>2.7</td>\n","      <td>116</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>294</th>\n","      <td>62.0</td>\n","      <td>0</td>\n","      <td>61</td>\n","      <td>1</td>\n","      <td>38</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1.1</td>\n","      <td>143</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>295</th>\n","      <td>55.0</td>\n","      <td>0</td>\n","      <td>1820</td>\n","      <td>0</td>\n","      <td>38</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1.2</td>\n","      <td>139</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>296</th>\n","      <td>45.0</td>\n","      <td>0</td>\n","      <td>2060</td>\n","      <td>1</td>\n","      <td>60</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0.8</td>\n","      <td>138</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>297</th>\n","      <td>45.0</td>\n","      <td>0</td>\n","      <td>2413</td>\n","      <td>0</td>\n","      <td>38</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1.4</td>\n","      <td>140</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>298</th>\n","      <td>50.0</td>\n","      <td>0</td>\n","      <td>196</td>\n","      <td>0</td>\n","      <td>45</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1.6</td>\n","      <td>136</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>299 rows × 10 columns</p>\n","</div>"],"text/plain":["      age  anaemia  ...  serum_sodium  smoking\n","0    75.0        0  ...           130        0\n","1    55.0        0  ...           136        0\n","2    65.0        0  ...           129        1\n","3    50.0        1  ...           137        0\n","4    65.0        1  ...           116        0\n","..    ...      ...  ...           ...      ...\n","294  62.0        0  ...           143        1\n","295  55.0        0  ...           139        0\n","296  45.0        0  ...           138        0\n","297  45.0        0  ...           140        1\n","298  50.0        0  ...           136        1\n","\n","[299 rows x 10 columns]"]},"metadata":{"tags":[]},"execution_count":26}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":80},"id":"mbh4GhGPfHnX","executionInfo":{"status":"ok","timestamp":1626436427402,"user_tz":180,"elapsed":245,"user":{"displayName":"Eliane Somavilla","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghy_NFVbfAPw__SCssozvPZEBaCTpwRMETXKEV--g=s64","userId":"12870892689360984547"}},"outputId":"d827eaff-fbdd-4ac3-d4fc-0e8e05c25873"},"source":["#váriáveis independentes\n","\n","y = df.iloc[:,12:13]\n","y.head(1)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>DEATH_EVENT</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   DEATH_EVENT\n","0            1"]},"metadata":{"tags":[]},"execution_count":27}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"daDo60xFZpuO","executionInfo":{"status":"ok","timestamp":1626436427403,"user_tz":180,"elapsed":241,"user":{"displayName":"Eliane Somavilla","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghy_NFVbfAPw__SCssozvPZEBaCTpwRMETXKEV--g=s64","userId":"12870892689360984547"}},"outputId":"7eeae967-77a3-46c7-f767-157c0e293a80"},"source":["\n","#api model_selection  do sklearn faz a separação dos dados de treino e de teste\n","from sklearn.model_selection import train_test_split\n","#os dois primeiros parametros referem ao conjunto de variaveis independentes, variaveis  dependentes, o tamanho do conjunto de teste (comum 20% ou seja, 0.2) e o random_state refere-se a iniciação dos theta0 e theta1 (comum iniciar com zero)\n","#.values transforma os dados em um array/matriz (outro objeto). As APIS que implementam as equações trabalham apenas com objetos arrays/matriz\n","X_treino, X_teste, y_treino, y_teste = train_test_split(X.values,y.values, test_size=0.2, random_state = 0)\n","\n","#shape para ver o formato do X do y e o formato total da amostra\n","X_treino.shape,X_teste.shape,y_treino.shape,y_teste.shape,X.shape"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["((239, 10), (60, 10), (239, 1), (60, 1), (299, 10))"]},"metadata":{"tags":[]},"execution_count":28}]},{"cell_type":"code","metadata":{"id":"LfiCZVmBXMpE"},"source":["#normalizar as variaveis para  escalar e aproximar os valores  do conjunto X\n","from sklearn.preprocessing import StandardScaler\n","sc = StandardScaler()\n","X_train = sc.fit_transform(X_treino)\n","X_test = sc.transform(X_teste)\n","X_test"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":52},"id":"S1Zgu3UuaEvG","executionInfo":{"status":"ok","timestamp":1626436427404,"user_tz":180,"elapsed":226,"user":{"displayName":"Eliane Somavilla","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghy_NFVbfAPw__SCssozvPZEBaCTpwRMETXKEV--g=s64","userId":"12870892689360984547"}},"outputId":"b35680ac-1e1a-4e47-8306-d0fb30f7b4bd"},"source":["# NÃO UTILIZADA A NORMALIZAÇÃO DE VALIÁVEIS PARA ESCALAR E APROXIMAR OS VALORES DE Y\n","'''#normalizar as variaveis para  escalar e aproximar os valores do conjunto y\n","from sklearn.preprocessing import StandardScaler\n","sc = StandardScaler()\n","y_train = sc.fit_transform(y_treino)\n","y_test = sc.transform(y_teste)\n","y_test'''"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'#normalizar as variaveis para  escalar e aproximar os valores do conjunto y\\nfrom sklearn.preprocessing import StandardScaler\\nsc = StandardScaler()\\ny_train = sc.fit_transform(y_treino)\\ny_test = sc.transform(y_teste)\\ny_test'"]},"metadata":{"tags":[]},"execution_count":30}]},{"cell_type":"markdown","metadata":{"id":"1uFlKrWyO8wS"},"source":["# **KNN**"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"oeNlTQxePDgU","executionInfo":{"status":"ok","timestamp":1626038437453,"user_tz":180,"elapsed":236,"user":{"displayName":"Eliane Somavilla","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghy_NFVbfAPw__SCssozvPZEBaCTpwRMETXKEV--g=s64","userId":"12870892689360984547"}},"outputId":"0abd06bb-eca5-4311-9f77-f34f84f39e4c"},"source":["# treinando o modelo \n","from sklearn.neighbors import KNeighborsClassifier\n","# melhor resultado obtido foi através da análise dos 6 vizinhos mais próximos\n","modelo_knn = KNeighborsClassifier(n_neighbors = 6)\n","modelo_knn.fit(X_train,y_treino)\n","#predição com a o X_test\n","y_pred_knn = modelo_knn.predict(X_test)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:5: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  \"\"\"\n"],"name":"stderr"}]},{"cell_type":"markdown","metadata":{"id":"elQ6ukurjqon"},"source":["## **Analisando as melhores features (variáveis independentes) - KNN**"]},{"cell_type":"code","metadata":{"id":"f_8xtr2SuNjL","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1626037427815,"user_tz":180,"elapsed":867,"user":{"displayName":"Eliane Somavilla","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghy_NFVbfAPw__SCssozvPZEBaCTpwRMETXKEV--g=s64","userId":"12870892689360984547"}},"outputId":"0fb2ad25-a024-4f73-afe2-1fe72cb7e27f"},"source":["from sklearn.neighbors import KNeighborsClassifier\n","#SFS removem ou adicionam um recurso por vez com base no desempenho do classificador até que um subconjunto de recursos do tamanho k desejado seja alcançado\n","from mlxtend.feature_selection import SequentialFeatureSelector as SFS\n","# Ao escolher cv=0, não executamos nenhuma validação cruzada.\n","#avaliação das melhores feactures\n","sfs1 = SFS(modelo_knn, \n","           k_features=10, \n","           cv=0)\n","\n","sfs1 = sfs1.fit(X_train, y_treino)\n"],"execution_count":null,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.7/dist-packages/sklearn/externals/joblib/__init__.py:15: FutureWarning: sklearn.externals.joblib is deprecated in 0.21 and will be removed in 0.23. Please import this functionality directly from joblib, which can be installed with: pip install joblib. If this warning is raised when loading pickled models, you may need to re-serialize those models with scikit-learn 0.21+.\n","  warnings.warn(msg, category=FutureWarning)\n","/usr/local/lib/python3.7/dist-packages/mlxtend/feature_selection/sequential_feature_selector.py:36: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  selector.est_.fit(X[:, indices], y, **fit_params)\n","/usr/local/lib/python3.7/dist-packages/mlxtend/feature_selection/sequential_feature_selector.py:36: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  selector.est_.fit(X[:, indices], y, **fit_params)\n","/usr/local/lib/python3.7/dist-packages/mlxtend/feature_selection/sequential_feature_selector.py:36: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  selector.est_.fit(X[:, indices], y, **fit_params)\n","/usr/local/lib/python3.7/dist-packages/mlxtend/feature_selection/sequential_feature_selector.py:36: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  selector.est_.fit(X[:, indices], y, **fit_params)\n","/usr/local/lib/python3.7/dist-packages/mlxtend/feature_selection/sequential_feature_selector.py:36: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  selector.est_.fit(X[:, indices], y, **fit_params)\n","/usr/local/lib/python3.7/dist-packages/mlxtend/feature_selection/sequential_feature_selector.py:36: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  selector.est_.fit(X[:, indices], y, **fit_params)\n","/usr/local/lib/python3.7/dist-packages/mlxtend/feature_selection/sequential_feature_selector.py:36: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  selector.est_.fit(X[:, indices], y, **fit_params)\n","/usr/local/lib/python3.7/dist-packages/mlxtend/feature_selection/sequential_feature_selector.py:36: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  selector.est_.fit(X[:, indices], y, **fit_params)\n","/usr/local/lib/python3.7/dist-packages/mlxtend/feature_selection/sequential_feature_selector.py:36: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  selector.est_.fit(X[:, indices], y, **fit_params)\n","/usr/local/lib/python3.7/dist-packages/mlxtend/feature_selection/sequential_feature_selector.py:36: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  selector.est_.fit(X[:, indices], y, **fit_params)\n","/usr/local/lib/python3.7/dist-packages/mlxtend/feature_selection/sequential_feature_selector.py:36: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  selector.est_.fit(X[:, indices], y, **fit_params)\n","/usr/local/lib/python3.7/dist-packages/mlxtend/feature_selection/sequential_feature_selector.py:36: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  selector.est_.fit(X[:, indices], y, **fit_params)\n","/usr/local/lib/python3.7/dist-packages/mlxtend/feature_selection/sequential_feature_selector.py:36: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  selector.est_.fit(X[:, indices], y, **fit_params)\n","/usr/local/lib/python3.7/dist-packages/mlxtend/feature_selection/sequential_feature_selector.py:36: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  selector.est_.fit(X[:, indices], y, **fit_params)\n","/usr/local/lib/python3.7/dist-packages/mlxtend/feature_selection/sequential_feature_selector.py:36: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  selector.est_.fit(X[:, indices], y, **fit_params)\n","/usr/local/lib/python3.7/dist-packages/mlxtend/feature_selection/sequential_feature_selector.py:36: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  selector.est_.fit(X[:, indices], y, **fit_params)\n","/usr/local/lib/python3.7/dist-packages/mlxtend/feature_selection/sequential_feature_selector.py:36: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  selector.est_.fit(X[:, indices], y, **fit_params)\n","/usr/local/lib/python3.7/dist-packages/mlxtend/feature_selection/sequential_feature_selector.py:36: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  selector.est_.fit(X[:, indices], y, **fit_params)\n","/usr/local/lib/python3.7/dist-packages/mlxtend/feature_selection/sequential_feature_selector.py:36: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  selector.est_.fit(X[:, indices], y, **fit_params)\n","/usr/local/lib/python3.7/dist-packages/mlxtend/feature_selection/sequential_feature_selector.py:36: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  selector.est_.fit(X[:, indices], y, **fit_params)\n","/usr/local/lib/python3.7/dist-packages/mlxtend/feature_selection/sequential_feature_selector.py:36: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  selector.est_.fit(X[:, indices], y, **fit_params)\n","/usr/local/lib/python3.7/dist-packages/mlxtend/feature_selection/sequential_feature_selector.py:36: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  selector.est_.fit(X[:, indices], y, **fit_params)\n","/usr/local/lib/python3.7/dist-packages/mlxtend/feature_selection/sequential_feature_selector.py:36: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  selector.est_.fit(X[:, indices], y, **fit_params)\n","/usr/local/lib/python3.7/dist-packages/mlxtend/feature_selection/sequential_feature_selector.py:36: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  selector.est_.fit(X[:, indices], y, **fit_params)\n","/usr/local/lib/python3.7/dist-packages/mlxtend/feature_selection/sequential_feature_selector.py:36: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  selector.est_.fit(X[:, indices], y, **fit_params)\n","/usr/local/lib/python3.7/dist-packages/mlxtend/feature_selection/sequential_feature_selector.py:36: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  selector.est_.fit(X[:, indices], y, **fit_params)\n","/usr/local/lib/python3.7/dist-packages/mlxtend/feature_selection/sequential_feature_selector.py:36: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  selector.est_.fit(X[:, indices], y, **fit_params)\n","/usr/local/lib/python3.7/dist-packages/mlxtend/feature_selection/sequential_feature_selector.py:36: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  selector.est_.fit(X[:, indices], y, **fit_params)\n","/usr/local/lib/python3.7/dist-packages/mlxtend/feature_selection/sequential_feature_selector.py:36: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  selector.est_.fit(X[:, indices], y, **fit_params)\n","/usr/local/lib/python3.7/dist-packages/mlxtend/feature_selection/sequential_feature_selector.py:36: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  selector.est_.fit(X[:, indices], y, **fit_params)\n","/usr/local/lib/python3.7/dist-packages/mlxtend/feature_selection/sequential_feature_selector.py:36: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  selector.est_.fit(X[:, indices], y, **fit_params)\n","/usr/local/lib/python3.7/dist-packages/mlxtend/feature_selection/sequential_feature_selector.py:36: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  selector.est_.fit(X[:, indices], y, **fit_params)\n","/usr/local/lib/python3.7/dist-packages/mlxtend/feature_selection/sequential_feature_selector.py:36: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  selector.est_.fit(X[:, indices], y, **fit_params)\n","/usr/local/lib/python3.7/dist-packages/mlxtend/feature_selection/sequential_feature_selector.py:36: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  selector.est_.fit(X[:, indices], y, **fit_params)\n","/usr/local/lib/python3.7/dist-packages/mlxtend/feature_selection/sequential_feature_selector.py:36: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  selector.est_.fit(X[:, indices], y, **fit_params)\n","/usr/local/lib/python3.7/dist-packages/mlxtend/feature_selection/sequential_feature_selector.py:36: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  selector.est_.fit(X[:, indices], y, **fit_params)\n","/usr/local/lib/python3.7/dist-packages/mlxtend/feature_selection/sequential_feature_selector.py:36: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  selector.est_.fit(X[:, indices], y, **fit_params)\n","/usr/local/lib/python3.7/dist-packages/mlxtend/feature_selection/sequential_feature_selector.py:36: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  selector.est_.fit(X[:, indices], y, **fit_params)\n","/usr/local/lib/python3.7/dist-packages/mlxtend/feature_selection/sequential_feature_selector.py:36: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  selector.est_.fit(X[:, indices], y, **fit_params)\n","/usr/local/lib/python3.7/dist-packages/mlxtend/feature_selection/sequential_feature_selector.py:36: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  selector.est_.fit(X[:, indices], y, **fit_params)\n","/usr/local/lib/python3.7/dist-packages/mlxtend/feature_selection/sequential_feature_selector.py:36: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  selector.est_.fit(X[:, indices], y, **fit_params)\n","/usr/local/lib/python3.7/dist-packages/mlxtend/feature_selection/sequential_feature_selector.py:36: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  selector.est_.fit(X[:, indices], y, **fit_params)\n","/usr/local/lib/python3.7/dist-packages/mlxtend/feature_selection/sequential_feature_selector.py:36: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  selector.est_.fit(X[:, indices], y, **fit_params)\n","/usr/local/lib/python3.7/dist-packages/mlxtend/feature_selection/sequential_feature_selector.py:36: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  selector.est_.fit(X[:, indices], y, **fit_params)\n","/usr/local/lib/python3.7/dist-packages/mlxtend/feature_selection/sequential_feature_selector.py:36: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  selector.est_.fit(X[:, indices], y, **fit_params)\n","/usr/local/lib/python3.7/dist-packages/mlxtend/feature_selection/sequential_feature_selector.py:36: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  selector.est_.fit(X[:, indices], y, **fit_params)\n","/usr/local/lib/python3.7/dist-packages/mlxtend/feature_selection/sequential_feature_selector.py:36: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  selector.est_.fit(X[:, indices], y, **fit_params)\n","/usr/local/lib/python3.7/dist-packages/mlxtend/feature_selection/sequential_feature_selector.py:36: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  selector.est_.fit(X[:, indices], y, **fit_params)\n","/usr/local/lib/python3.7/dist-packages/mlxtend/feature_selection/sequential_feature_selector.py:36: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  selector.est_.fit(X[:, indices], y, **fit_params)\n","/usr/local/lib/python3.7/dist-packages/mlxtend/feature_selection/sequential_feature_selector.py:36: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  selector.est_.fit(X[:, indices], y, **fit_params)\n","/usr/local/lib/python3.7/dist-packages/mlxtend/feature_selection/sequential_feature_selector.py:36: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  selector.est_.fit(X[:, indices], y, **fit_params)\n","/usr/local/lib/python3.7/dist-packages/mlxtend/feature_selection/sequential_feature_selector.py:36: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  selector.est_.fit(X[:, indices], y, **fit_params)\n","/usr/local/lib/python3.7/dist-packages/mlxtend/feature_selection/sequential_feature_selector.py:36: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  selector.est_.fit(X[:, indices], y, **fit_params)\n","/usr/local/lib/python3.7/dist-packages/mlxtend/feature_selection/sequential_feature_selector.py:36: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  selector.est_.fit(X[:, indices], y, **fit_params)\n","/usr/local/lib/python3.7/dist-packages/mlxtend/feature_selection/sequential_feature_selector.py:36: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  selector.est_.fit(X[:, indices], y, **fit_params)\n"],"name":"stderr"}]},{"cell_type":"code","metadata":{"id":"X2wmTy_BgGoJ","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1626037428696,"user_tz":180,"elapsed":888,"user":{"displayName":"Eliane Somavilla","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghy_NFVbfAPw__SCssozvPZEBaCTpwRMETXKEV--g=s64","userId":"12870892689360984547"}},"outputId":"cfd62127-0124-445b-e3fe-2f033a2fff55"},"source":["#nomeando as feactures do KNN\n","feature_names = X.columns\n","sfs1 = sfs1.fit(X_train, y_treino, custom_feature_names=feature_names)\n","#Por meio do subsets_atributo, podemos dar uma olhada nos índices de recursos selecionados em cada etapa\n","# sfs1.subsets_"],"execution_count":null,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.7/dist-packages/mlxtend/feature_selection/sequential_feature_selector.py:36: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  selector.est_.fit(X[:, indices], y, **fit_params)\n","/usr/local/lib/python3.7/dist-packages/mlxtend/feature_selection/sequential_feature_selector.py:36: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  selector.est_.fit(X[:, indices], y, **fit_params)\n","/usr/local/lib/python3.7/dist-packages/mlxtend/feature_selection/sequential_feature_selector.py:36: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  selector.est_.fit(X[:, indices], y, **fit_params)\n","/usr/local/lib/python3.7/dist-packages/mlxtend/feature_selection/sequential_feature_selector.py:36: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  selector.est_.fit(X[:, indices], y, **fit_params)\n","/usr/local/lib/python3.7/dist-packages/mlxtend/feature_selection/sequential_feature_selector.py:36: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  selector.est_.fit(X[:, indices], y, **fit_params)\n","/usr/local/lib/python3.7/dist-packages/mlxtend/feature_selection/sequential_feature_selector.py:36: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  selector.est_.fit(X[:, indices], y, **fit_params)\n","/usr/local/lib/python3.7/dist-packages/mlxtend/feature_selection/sequential_feature_selector.py:36: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  selector.est_.fit(X[:, indices], y, **fit_params)\n","/usr/local/lib/python3.7/dist-packages/mlxtend/feature_selection/sequential_feature_selector.py:36: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  selector.est_.fit(X[:, indices], y, **fit_params)\n","/usr/local/lib/python3.7/dist-packages/mlxtend/feature_selection/sequential_feature_selector.py:36: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  selector.est_.fit(X[:, indices], y, **fit_params)\n","/usr/local/lib/python3.7/dist-packages/mlxtend/feature_selection/sequential_feature_selector.py:36: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  selector.est_.fit(X[:, indices], y, **fit_params)\n","/usr/local/lib/python3.7/dist-packages/mlxtend/feature_selection/sequential_feature_selector.py:36: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  selector.est_.fit(X[:, indices], y, **fit_params)\n","/usr/local/lib/python3.7/dist-packages/mlxtend/feature_selection/sequential_feature_selector.py:36: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  selector.est_.fit(X[:, indices], y, **fit_params)\n","/usr/local/lib/python3.7/dist-packages/mlxtend/feature_selection/sequential_feature_selector.py:36: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  selector.est_.fit(X[:, indices], y, **fit_params)\n","/usr/local/lib/python3.7/dist-packages/mlxtend/feature_selection/sequential_feature_selector.py:36: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  selector.est_.fit(X[:, indices], y, **fit_params)\n","/usr/local/lib/python3.7/dist-packages/mlxtend/feature_selection/sequential_feature_selector.py:36: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  selector.est_.fit(X[:, indices], y, **fit_params)\n","/usr/local/lib/python3.7/dist-packages/mlxtend/feature_selection/sequential_feature_selector.py:36: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  selector.est_.fit(X[:, indices], y, **fit_params)\n","/usr/local/lib/python3.7/dist-packages/mlxtend/feature_selection/sequential_feature_selector.py:36: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  selector.est_.fit(X[:, indices], y, **fit_params)\n","/usr/local/lib/python3.7/dist-packages/mlxtend/feature_selection/sequential_feature_selector.py:36: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  selector.est_.fit(X[:, indices], y, **fit_params)\n","/usr/local/lib/python3.7/dist-packages/mlxtend/feature_selection/sequential_feature_selector.py:36: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  selector.est_.fit(X[:, indices], y, **fit_params)\n","/usr/local/lib/python3.7/dist-packages/mlxtend/feature_selection/sequential_feature_selector.py:36: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  selector.est_.fit(X[:, indices], y, **fit_params)\n","/usr/local/lib/python3.7/dist-packages/mlxtend/feature_selection/sequential_feature_selector.py:36: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  selector.est_.fit(X[:, indices], y, **fit_params)\n","/usr/local/lib/python3.7/dist-packages/mlxtend/feature_selection/sequential_feature_selector.py:36: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  selector.est_.fit(X[:, indices], y, **fit_params)\n","/usr/local/lib/python3.7/dist-packages/mlxtend/feature_selection/sequential_feature_selector.py:36: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  selector.est_.fit(X[:, indices], y, **fit_params)\n","/usr/local/lib/python3.7/dist-packages/mlxtend/feature_selection/sequential_feature_selector.py:36: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  selector.est_.fit(X[:, indices], y, **fit_params)\n","/usr/local/lib/python3.7/dist-packages/mlxtend/feature_selection/sequential_feature_selector.py:36: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  selector.est_.fit(X[:, indices], y, **fit_params)\n","/usr/local/lib/python3.7/dist-packages/mlxtend/feature_selection/sequential_feature_selector.py:36: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  selector.est_.fit(X[:, indices], y, **fit_params)\n","/usr/local/lib/python3.7/dist-packages/mlxtend/feature_selection/sequential_feature_selector.py:36: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  selector.est_.fit(X[:, indices], y, **fit_params)\n","/usr/local/lib/python3.7/dist-packages/mlxtend/feature_selection/sequential_feature_selector.py:36: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  selector.est_.fit(X[:, indices], y, **fit_params)\n","/usr/local/lib/python3.7/dist-packages/mlxtend/feature_selection/sequential_feature_selector.py:36: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  selector.est_.fit(X[:, indices], y, **fit_params)\n","/usr/local/lib/python3.7/dist-packages/mlxtend/feature_selection/sequential_feature_selector.py:36: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  selector.est_.fit(X[:, indices], y, **fit_params)\n","/usr/local/lib/python3.7/dist-packages/mlxtend/feature_selection/sequential_feature_selector.py:36: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  selector.est_.fit(X[:, indices], y, **fit_params)\n","/usr/local/lib/python3.7/dist-packages/mlxtend/feature_selection/sequential_feature_selector.py:36: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  selector.est_.fit(X[:, indices], y, **fit_params)\n","/usr/local/lib/python3.7/dist-packages/mlxtend/feature_selection/sequential_feature_selector.py:36: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  selector.est_.fit(X[:, indices], y, **fit_params)\n","/usr/local/lib/python3.7/dist-packages/mlxtend/feature_selection/sequential_feature_selector.py:36: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  selector.est_.fit(X[:, indices], y, **fit_params)\n","/usr/local/lib/python3.7/dist-packages/mlxtend/feature_selection/sequential_feature_selector.py:36: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  selector.est_.fit(X[:, indices], y, **fit_params)\n","/usr/local/lib/python3.7/dist-packages/mlxtend/feature_selection/sequential_feature_selector.py:36: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  selector.est_.fit(X[:, indices], y, **fit_params)\n","/usr/local/lib/python3.7/dist-packages/mlxtend/feature_selection/sequential_feature_selector.py:36: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  selector.est_.fit(X[:, indices], y, **fit_params)\n","/usr/local/lib/python3.7/dist-packages/mlxtend/feature_selection/sequential_feature_selector.py:36: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  selector.est_.fit(X[:, indices], y, **fit_params)\n","/usr/local/lib/python3.7/dist-packages/mlxtend/feature_selection/sequential_feature_selector.py:36: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  selector.est_.fit(X[:, indices], y, **fit_params)\n","/usr/local/lib/python3.7/dist-packages/mlxtend/feature_selection/sequential_feature_selector.py:36: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  selector.est_.fit(X[:, indices], y, **fit_params)\n","/usr/local/lib/python3.7/dist-packages/mlxtend/feature_selection/sequential_feature_selector.py:36: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  selector.est_.fit(X[:, indices], y, **fit_params)\n","/usr/local/lib/python3.7/dist-packages/mlxtend/feature_selection/sequential_feature_selector.py:36: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  selector.est_.fit(X[:, indices], y, **fit_params)\n","/usr/local/lib/python3.7/dist-packages/mlxtend/feature_selection/sequential_feature_selector.py:36: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  selector.est_.fit(X[:, indices], y, **fit_params)\n","/usr/local/lib/python3.7/dist-packages/mlxtend/feature_selection/sequential_feature_selector.py:36: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  selector.est_.fit(X[:, indices], y, **fit_params)\n","/usr/local/lib/python3.7/dist-packages/mlxtend/feature_selection/sequential_feature_selector.py:36: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  selector.est_.fit(X[:, indices], y, **fit_params)\n","/usr/local/lib/python3.7/dist-packages/mlxtend/feature_selection/sequential_feature_selector.py:36: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  selector.est_.fit(X[:, indices], y, **fit_params)\n","/usr/local/lib/python3.7/dist-packages/mlxtend/feature_selection/sequential_feature_selector.py:36: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  selector.est_.fit(X[:, indices], y, **fit_params)\n","/usr/local/lib/python3.7/dist-packages/mlxtend/feature_selection/sequential_feature_selector.py:36: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  selector.est_.fit(X[:, indices], y, **fit_params)\n","/usr/local/lib/python3.7/dist-packages/mlxtend/feature_selection/sequential_feature_selector.py:36: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  selector.est_.fit(X[:, indices], y, **fit_params)\n","/usr/local/lib/python3.7/dist-packages/mlxtend/feature_selection/sequential_feature_selector.py:36: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  selector.est_.fit(X[:, indices], y, **fit_params)\n","/usr/local/lib/python3.7/dist-packages/mlxtend/feature_selection/sequential_feature_selector.py:36: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  selector.est_.fit(X[:, indices], y, **fit_params)\n","/usr/local/lib/python3.7/dist-packages/mlxtend/feature_selection/sequential_feature_selector.py:36: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  selector.est_.fit(X[:, indices], y, **fit_params)\n","/usr/local/lib/python3.7/dist-packages/mlxtend/feature_selection/sequential_feature_selector.py:36: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  selector.est_.fit(X[:, indices], y, **fit_params)\n","/usr/local/lib/python3.7/dist-packages/mlxtend/feature_selection/sequential_feature_selector.py:36: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  selector.est_.fit(X[:, indices], y, **fit_params)\n","/usr/local/lib/python3.7/dist-packages/mlxtend/feature_selection/sequential_feature_selector.py:36: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  selector.est_.fit(X[:, indices], y, **fit_params)\n"],"name":"stderr"}]},{"cell_type":"code","metadata":{"id":"sy7mSYAYeBba","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1626037428699,"user_tz":180,"elapsed":44,"user":{"displayName":"Eliane Somavilla","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghy_NFVbfAPw__SCssozvPZEBaCTpwRMETXKEV--g=s64","userId":"12870892689360984547"}},"outputId":"fb26692d-415a-4663-d27a-3c2db8c9c260"},"source":["# IDs das melhores feactures \n","sfs1.k_feature_idx_"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)"]},"metadata":{"tags":[]},"execution_count":30}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7HEu7iS4e53b","executionInfo":{"status":"ok","timestamp":1626037428700,"user_tz":180,"elapsed":37,"user":{"displayName":"Eliane Somavilla","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghy_NFVbfAPw__SCssozvPZEBaCTpwRMETXKEV--g=s64","userId":"12870892689360984547"}},"outputId":"c63533f1-a35b-48b5-b8d8-8805593edd44"},"source":["# Nomes  das melhores feactures \n","sfs1.k_feature_names_"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["('age',\n"," 'anaemia',\n"," 'creatinine_phosphokinase',\n"," 'diabetes',\n"," 'ejection_fraction',\n"," 'high_blood_pressure',\n"," 'platelets',\n"," 'serum_creatinine',\n"," 'serum_sodium',\n"," 'smoking')"]},"metadata":{"tags":[]},"execution_count":31}]},{"cell_type":"markdown","metadata":{"id":"M8f3K7xsREkY"},"source":["## **Treinando  e avaliando novamente o modelo após avaliação de features**"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0O-dQsHEP1cG","executionInfo":{"status":"ok","timestamp":1626037429242,"user_tz":180,"elapsed":570,"user":{"displayName":"Eliane Somavilla","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghy_NFVbfAPw__SCssozvPZEBaCTpwRMETXKEV--g=s64","userId":"12870892689360984547"}},"outputId":"a06f3c95-c4f8-42aa-ed94-6978db6c39bd"},"source":["#excluindo variaveis de menor importancia\n","\n","X1 = df.iloc[:,0:9]\n","X2 = df.iloc[:,10:11]\n","X = pd.concat([X1,X2],axis=1)\n","X"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>anaemia</th>\n","      <th>creatinine_phosphokinase</th>\n","      <th>diabetes</th>\n","      <th>ejection_fraction</th>\n","      <th>high_blood_pressure</th>\n","      <th>platelets</th>\n","      <th>serum_creatinine</th>\n","      <th>serum_sodium</th>\n","      <th>smoking</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>75.0</td>\n","      <td>0</td>\n","      <td>582</td>\n","      <td>0</td>\n","      <td>20</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1.9</td>\n","      <td>130</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>55.0</td>\n","      <td>0</td>\n","      <td>7861</td>\n","      <td>0</td>\n","      <td>38</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1.1</td>\n","      <td>136</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>65.0</td>\n","      <td>0</td>\n","      <td>146</td>\n","      <td>0</td>\n","      <td>20</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1.3</td>\n","      <td>129</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>50.0</td>\n","      <td>1</td>\n","      <td>111</td>\n","      <td>0</td>\n","      <td>20</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1.9</td>\n","      <td>137</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>65.0</td>\n","      <td>1</td>\n","      <td>160</td>\n","      <td>1</td>\n","      <td>20</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>2.7</td>\n","      <td>116</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>294</th>\n","      <td>62.0</td>\n","      <td>0</td>\n","      <td>61</td>\n","      <td>1</td>\n","      <td>38</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1.1</td>\n","      <td>143</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>295</th>\n","      <td>55.0</td>\n","      <td>0</td>\n","      <td>1820</td>\n","      <td>0</td>\n","      <td>38</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1.2</td>\n","      <td>139</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>296</th>\n","      <td>45.0</td>\n","      <td>0</td>\n","      <td>2060</td>\n","      <td>1</td>\n","      <td>60</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0.8</td>\n","      <td>138</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>297</th>\n","      <td>45.0</td>\n","      <td>0</td>\n","      <td>2413</td>\n","      <td>0</td>\n","      <td>38</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1.4</td>\n","      <td>140</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>298</th>\n","      <td>50.0</td>\n","      <td>0</td>\n","      <td>196</td>\n","      <td>0</td>\n","      <td>45</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1.6</td>\n","      <td>136</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>299 rows × 10 columns</p>\n","</div>"],"text/plain":["      age  anaemia  ...  serum_sodium  smoking\n","0    75.0        0  ...           130        0\n","1    55.0        0  ...           136        0\n","2    65.0        0  ...           129        1\n","3    50.0        1  ...           137        0\n","4    65.0        1  ...           116        0\n","..    ...      ...  ...           ...      ...\n","294  62.0        0  ...           143        1\n","295  55.0        0  ...           139        0\n","296  45.0        0  ...           138        0\n","297  45.0        0  ...           140        1\n","298  50.0        0  ...           136        1\n","\n","[299 rows x 10 columns]"]},"metadata":{"tags":[]},"execution_count":32}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"X8OONGucqKtx","executionInfo":{"status":"ok","timestamp":1626037429243,"user_tz":180,"elapsed":90,"user":{"displayName":"Eliane Somavilla","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghy_NFVbfAPw__SCssozvPZEBaCTpwRMETXKEV--g=s64","userId":"12870892689360984547"}},"outputId":"fffca2a7-d6da-4e95-b585-140d9f7d41c8"},"source":["#váriáveis independentes\n","\n","y = df.iloc[:,12:13]\n","y.head(1)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>DEATH_EVENT</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   DEATH_EVENT\n","0            1"]},"metadata":{"tags":[]},"execution_count":33}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"tWCreQNeqQDz","executionInfo":{"status":"ok","timestamp":1626037429244,"user_tz":180,"elapsed":88,"user":{"displayName":"Eliane Somavilla","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghy_NFVbfAPw__SCssozvPZEBaCTpwRMETXKEV--g=s64","userId":"12870892689360984547"}},"outputId":"f826e875-06a8-4085-9ca0-e01707279c2a"},"source":["#api model_selection  do sklearn faz a separação dos dados de treino e de teste\n","from sklearn.model_selection import train_test_split\n","#os dois primeiros parametros referem ao conjunto de variaveis independentes, variaveis  dependentes, o tamanho do conjunto de teste (comum 20% ou seja, 0.2) e o random_state refere-se a iniciação dos theta0 e theta1 (comum iniciar com zero)\n","#.values transforma os dados em um array/matriz (outro objeto). As APIS que implementam as equações trabalham apenas com objetos arrays/matriz\n","X_treino, X_teste, y_treino, y_teste = train_test_split(X.values,y.values, test_size=0.2, random_state = 0)\n","\n","#shape para ver o formato do X do y e o formato total da amostra\n","X_treino.shape,X_teste.shape,y_treino.shape,y_teste.shape,X.shape"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["((239, 10), (60, 10), (239, 1), (60, 1), (299, 10))"]},"metadata":{"tags":[]},"execution_count":34}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"WM3ZX3EMqTnH","executionInfo":{"status":"ok","timestamp":1626037429246,"user_tz":180,"elapsed":83,"user":{"displayName":"Eliane Somavilla","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghy_NFVbfAPw__SCssozvPZEBaCTpwRMETXKEV--g=s64","userId":"12870892689360984547"}},"outputId":"9705bcb8-9fb5-484e-9a2e-92439807c847"},"source":["#normalizar as variaveis para  escalar e aproximar os valores  do conjunto X\n","from sklearn.preprocessing import StandardScaler\n","sc = StandardScaler()\n","X_train = sc.fit_transform(X_treino)\n","X_test = sc.transform(X_teste)\n","X_test"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[-1.77426136,  1.1201415 , -0.47902153, -0.84091787,  0.19723428,\n","        -0.76340124,  0.02156655, -0.59870359,  0.96163666, -0.68283063],\n","       [-0.02068121,  1.1201415 , -0.42805227,  1.18917678,  0.19723428,\n","         1.30992713,  0.02156655, -0.37986111, -0.12761055, -0.68283063],\n","       [-1.35001494,  1.1201415 ,  0.41803755, -0.84091787, -0.68386838,\n","        -0.76340124, -2.55563672, -0.27043986,  0.09023889, -0.68283063],\n","       [-0.5015221 , -0.89274435,  0.01130281,  1.18917678, -0.24331705,\n","         1.30992713,  0.02156655, -0.70812483,  0.74378721, -0.68283063],\n","       [ 0.77121715, -0.89274435, -0.34548205, -0.84091787, -0.68386838,\n","        -0.76340124,  0.02156655, -0.16101862, -0.99900832, -0.68283063],\n","       [ 0.34697073,  1.1201415 , -0.52183571,  1.18917678,  1.95943958,\n","        -0.76340124,  0.02156655, -0.48928235,  0.09023889, -0.68283063],\n","       [ 0.34697073, -0.89274435, -0.52489387, -0.84091787, -1.1244197 ,\n","        -0.76340124,  0.02156655,  3.99698858, -1.4347072 , -0.68283063],\n","       [-0.92576852,  1.1201415 , -0.4117421 ,  1.18917678,  0.6377856 ,\n","        -0.76340124,  0.02156655, -0.37986111, -0.12761055, -0.68283063],\n","       [-0.07727569, -0.89274435,  3.45886396,  1.18917678,  2.13566011,\n","        -0.76340124,  0.02156655,  5.96657093,  2.05088386, -0.68283063],\n","       [ 0.17727216, -0.89274435,  0.37216521, -0.84091787,  0.02101375,\n","        -0.76340124,  0.02156655, -0.27043986, -0.78115888,  1.46449201],\n","       [ 0.77121715, -0.89274435, -0.49940924,  1.18917678, -0.24331705,\n","         1.30992713,  2.59876983, -0.05159738,  0.52593777, -0.68283063],\n","       [ 1.78940855,  1.1201415 , -0.19563241, -0.84091787,  1.07833693,\n","        -0.76340124, -2.55563672, -0.05159738, -0.12761055, -0.68283063],\n","       [-0.24697425,  1.1201415 , -0.43416858, -0.84091787, -1.1244197 ,\n","        -0.76340124,  0.02156655, -0.16101862,  0.09023889,  1.46449201],\n","       [-0.5015221 , -0.89274435,  1.47412074, -0.84091787, -1.1244197 ,\n","        -0.76340124,  0.02156655, -0.27043986,  0.30808833, -0.68283063],\n","       [ 0.60151858,  1.1201415 , -0.35771468, -0.84091787, -0.24331705,\n","         1.30992713,  0.02156655, -0.48928235,  0.74378721,  1.46449201],\n","       [ 0.68636786, -0.89274435,  0.01130281, -0.84091787, -1.56497103,\n","        -0.76340124,  0.02156655, -0.16101862, -0.56330943,  1.46449201],\n","       [-1.77426136, -0.89274435,  0.01130281,  1.18917678, -0.24331705,\n","        -0.76340124,  0.02156655, -0.37986111, -0.99900832, -0.68283063],\n","       [ 0.77121715, -0.89274435, -0.51470002,  1.18917678,  0.6377856 ,\n","        -0.76340124,  0.02156655, -0.59870359, -0.12761055,  1.46449201],\n","       [-0.5015221 ,  1.1201415 ,  2.26618314, -0.84091787, -0.24331705,\n","         1.30992713, -2.55563672, -0.37986111,  0.74378721, -0.68283063],\n","       [-0.75606995,  1.1201415 , -0.38727685,  1.18917678, -0.68386838,\n","         1.30992713,  0.02156655, -0.37986111,  1.1794861 ,  1.46449201],\n","       [ 1.61970998, -0.89274435,  0.01130281,  1.18917678, -0.24331705,\n","        -0.76340124,  0.02156655,  0.82377256, -0.56330943, -0.68283063],\n","       [-1.60456279, -0.89274435,  4.72799869, -0.84091787, -0.68386838,\n","        -0.76340124,  0.02156655, -0.37986111,  0.74378721,  1.46449201],\n","       [-0.07727569, -0.89274435,  0.01130281, -0.84091787,  0.19723428,\n","        -0.76340124,  0.02156655,  2.57451243, -0.56330943, -0.68283063],\n","       [-0.67122067,  1.1201415 , -0.30674541,  1.18917678, -0.24331705,\n","        -0.76340124,  0.02156655,  2.2462487 ,  1.83303442, -0.68283063],\n","       [ 1.025765  , -0.89274435,  0.01130281, -0.84091787, -1.56497103,\n","        -0.76340124,  0.02156655,  0.5283352 , -0.56330943, -0.68283063],\n","       [-0.07727569,  1.1201415 , -0.48411846,  1.18917678,  1.95943958,\n","         1.30992713,  0.02156655, -0.70812483, -0.12761055, -0.68283063],\n","       [-1.35001494, -0.89274435,  0.01130281, -0.84091787, -1.56497103,\n","         1.30992713, -2.55563672,  0.27666635, -0.34545999, -0.68283063],\n","       [-0.5015221 ,  1.1201415 , -0.40868394,  1.18917678,  0.19723428,\n","        -0.76340124,  0.02156655, -0.16101862, -0.34545999, -0.68283063],\n","       [ 0.09242288, -0.89274435, -0.51979694,  1.18917678,  0.02101375,\n","         1.30992713,  0.02156655, -0.27043986,  1.39733554,  1.46449201],\n","       [-0.67122067, -0.89274435, -0.37096669,  1.18917678,  0.19723428,\n","        -0.76340124,  0.02156655, -0.16101862, -1.4347072 , -0.68283063],\n","       [-1.60456279, -0.89274435,  0.01130281, -0.84091787,  1.95943958,\n","        -0.76340124,  0.02156655, -0.18290287,  0.09023889, -0.68283063],\n","       [-1.60456279,  1.1201415 , -0.32713312,  1.18917678, -2.00552236,\n","        -0.76340124,  0.02156655, -0.05159738, -0.12761055, -0.68283063],\n","       [ 0.34697073, -0.89274435, -0.42193595, -0.84091787,  2.39999091,\n","        -0.76340124,  0.02156655,  0.1672451 ,  0.30808833, -0.68283063],\n","       [-0.07727569, -0.89274435, -0.48411846,  1.18917678,  0.02101375,\n","        -0.76340124,  0.02156655, -0.65341421,  0.74378721, -0.68283063],\n","       [-0.58637139,  1.1201415 , -0.14670192, -0.84091787,  2.84054223,\n","         1.30992713,  0.02156655,  8.37383826,  0.09023889, -0.68283063],\n","       [ 0.94091572, -0.89274435, -0.34446267, -0.84091787,  0.6377856 ,\n","         1.30992713,  0.02156655,  1.26145752, -0.34545999, -0.68283063],\n","       [ 0.68636786, -0.89274435,  0.86452832, -0.84091787,  0.19723428,\n","        -0.76340124, -2.55563672, -0.37986111, -0.34545999,  1.46449201],\n","       [ 0.34697073, -0.89274435, -0.17932225,  1.18917678, -1.1244197 ,\n","        -0.76340124,  0.02156655, -0.16101862, -0.12761055,  1.46449201],\n","       [-0.92576852, -0.89274435, -0.38217993, -0.84091787,  0.6377856 ,\n","        -0.76340124,  0.02156655,  0.27666635, -0.12761055,  1.46449201],\n","       [ 2.46820282,  1.1201415 , -0.53406834, -0.84091787,  0.19723428,\n","         1.30992713,  0.02156655,  0.82377256, -0.99900832,  1.46449201],\n","       [ 0.60151858,  1.1201415 , -0.42193595,  1.18917678,  1.95943958,\n","        -0.76340124,  0.02156655, -0.37986111,  0.74378721, -0.68283063],\n","       [-0.33182354,  1.1201415 , -0.46475014, -0.84091787, -1.1244197 ,\n","         1.30992713,  0.02156655, -0.27043986,  1.61518498, -0.68283063],\n","       [ 0.5166693 , -0.89274435,  0.01130281, -0.84091787,  1.07833693,\n","        -0.76340124,  0.02156655, -0.18290287,  0.09023889,  1.46449201],\n","       [ 0.34697073, -0.89274435, -0.48615723,  1.18917678,  1.07833693,\n","         1.30992713,  0.02156655, -0.37986111,  0.74378721, -0.68283063],\n","       [ 2.89244923,  1.1201415 , -0.20378749, -0.84091787, -0.68386838,\n","        -0.76340124,  2.59876983,  0.71435131, -0.99900832, -0.68283063],\n","       [-0.92576852, -0.89274435,  0.99602903, -0.84091787, -0.68386838,\n","         1.30992713,  0.02156655, -0.59870359,  0.30808833, -0.68283063],\n","       [-0.67122067,  1.1201415 ,  0.01130281, -0.84091787,  0.6377856 ,\n","        -0.76340124,  0.02156655, -0.27043986,  0.09023889,  1.46449201],\n","       [-1.35001494, -0.89274435,  0.01130281, -0.84091787,  3.72164489,\n","        -0.76340124,  0.02156655, -0.18290287,  0.09023889, -0.68283063],\n","       [-0.07727569,  1.1201415 , -0.26087307,  1.18917678,  1.95943958,\n","        -0.76340124,  2.59876983, -0.27043986, -1.21685776,  1.46449201],\n","       [-0.92576852, -0.89274435,  0.01130281,  1.18917678,  0.02101375,\n","        -0.76340124,  0.02156655,  0.60493007, -0.34545999,  1.46449201],\n","       [ 0.34697073, -0.89274435, -0.35363714,  1.18917678,  1.07833693,\n","        -0.76340124, -2.55563672, -0.05159738,  0.09023889,  1.46449201],\n","       [-0.07727569, -0.89274435, -0.25577615, -0.84091787, -0.24331705,\n","        -0.76340124, -2.55563672,  0.05782386,  0.52593777, -0.68283063],\n","       [-0.92576852,  1.1201415 , -0.46475014, -0.84091787, -1.56497103,\n","        -0.76340124,  0.02156655, -0.59870359,  0.52593777, -0.68283063],\n","       [-0.5015221 , -0.89274435,  0.18052077, -0.84091787,  0.6377856 ,\n","        -0.76340124,  0.02156655, -0.05159738,  0.09023889, -0.68283063],\n","       [ 0.94091572, -0.89274435, -0.21092319,  1.18917678, -1.56497103,\n","         1.30992713,  0.02156655, -0.05159738, -0.12761055,  1.46449201],\n","       [-0.07727569, -0.89274435, -0.41276149, -0.84091787, -0.68386838,\n","        -0.76340124, -2.55563672,  0.38608759, -2.08825552, -0.68283063],\n","       [ 0.34697073, -0.89274435,  0.01130281,  1.18917678,  0.19723428,\n","        -0.76340124,  0.02156655, -0.37986111,  0.30808833, -0.68283063],\n","       [ 2.89244923,  1.1201415 , -0.46780829, -0.84091787,  0.19723428,\n","         1.30992713,  0.02156655, -0.37986111,  0.30808833, -0.68283063],\n","       [ 0.34697073, -0.89274435,  1.13874297, -0.84091787,  0.02101375,\n","        -0.76340124,  0.02156655, -0.27043986,  0.30808833,  1.46449201],\n","       [-0.92576852, -0.89274435,  1.29980585,  1.18917678, -0.24331705,\n","        -0.76340124,  0.02156655, -0.18290287,  0.09023889,  1.46449201]])"]},"metadata":{"tags":[]},"execution_count":35}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rEmm5qY9qs2M","executionInfo":{"status":"ok","timestamp":1626037429247,"user_tz":180,"elapsed":82,"user":{"displayName":"Eliane Somavilla","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghy_NFVbfAPw__SCssozvPZEBaCTpwRMETXKEV--g=s64","userId":"12870892689360984547"}},"outputId":"082c9ab1-63a0-44bd-e134-a86e5d3e6b57"},"source":["# treinando o modelo \n","from sklearn.neighbors import KNeighborsClassifier\n","# melhor resultado obtido foi através da análise dos 6 vizinhos mais próximos\n","modelo_knn = KNeighborsClassifier(n_neighbors = 6)\n","modelo_knn.fit(X_train,y_treino)\n","#predição com a o X_test\n","y_pred_knn = modelo_knn.predict(X_test)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:5: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  \"\"\"\n"],"name":"stderr"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3aQ4_WPHRVzc","executionInfo":{"status":"ok","timestamp":1626037429247,"user_tz":180,"elapsed":81,"user":{"displayName":"Eliane Somavilla","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghy_NFVbfAPw__SCssozvPZEBaCTpwRMETXKEV--g=s64","userId":"12870892689360984547"}},"outputId":"aaf99f2f-a653-4c57-e0bd-9aa69d65143f"},"source":["#Matriz de confusão contabiliza se o valor previsto bateu com o valor real (verdadeiro positivo/verdadeiro negativo e falso positivo/falso negativo)\n","from sklearn.metrics import confusion_matrix\n","\n","cm_knn = confusion_matrix(y_teste,y_pred_knn)\n","\n","#calculo da acurácia usando matriz de confusão - KNN\n","acc_knn = (cm_knn[0,0]+cm_knn[1,1])/cm_knn.sum()\n","cm_knn\n","print('Knn: ', acc_knn)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Knn:  0.65\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"W6yTd8s5RbOS"},"source":["# **SVM**"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0hwvYiwrRc75","executionInfo":{"status":"ok","timestamp":1626040008933,"user_tz":180,"elapsed":412,"user":{"displayName":"Eliane Somavilla","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghy_NFVbfAPw__SCssozvPZEBaCTpwRMETXKEV--g=s64","userId":"12870892689360984547"}},"outputId":"4d59f6ee-926d-44bb-e13d-af3e4c52edfe"},"source":["# treinando o modelo \n","from sklearn.svm import SVC\n","# O kernel ajuda a achar a melhor decision boundery\n","#rbf é um kernel linear , ou seja, tenta seguir uma distribuição normal dos dados.  mas existem outros kelnels que podem ser usadas qdo o, por exemplo, nao existe uma distribuição normal de dados e pode ser usado  polimonio\n","#para este modelo o melhor resultado obtido foi através do uso do kernel linear\n","modelo_svm = SVC(kernel='linear', random_state = 0)\n","modelo_svm.fit(X_train,y_treino)\n","#predição com a o X_test\n","y_pred_svm = modelo_svm.predict(X_test)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.7/dist-packages/sklearn/utils/validation.py:760: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  y = column_or_1d(y, warn=True)\n"],"name":"stderr"}]},{"cell_type":"markdown","metadata":{"id":"f1562ElPlSYj"},"source":["## **Analisando as melhores features (variáveis independentes) - SVM**"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GHscTylJlX-D","executionInfo":{"status":"ok","timestamp":1626039899916,"user_tz":180,"elapsed":64,"user":{"displayName":"Eliane Somavilla","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghy_NFVbfAPw__SCssozvPZEBaCTpwRMETXKEV--g=s64","userId":"12870892689360984547"}},"outputId":"29fca1a0-aaaf-438a-bf55-15d5dd74a312"},"source":["from sklearn.svm import SVC\n","#Dado um estimador externo que atribui pesos aos recursos (por exemplo, os coeficientes de um modelo linear), o objetivo da eliminação recursiva de recursos ( RFE) é selecionar recursos considerando recursivamente conjuntos cada vez menores de recursos.\n","#  Em seguida, os recursos menos importantes são removidos do conjunto atual de recursos. \n","from sklearn.feature_selection import RFE\n","\n","svc = SVC(kernel=\"linear\", C=1)\n","#verifica as  melhores features\n","rfe = RFE(estimator=svc, n_features_to_select=10)\n","rfe = rfe.fit(X_train, y_treino)\n","#imprime o ID das variáveis ranqueadas (mais importantes)\n","print(rfe.ranking_)\n","print(rfe.support_)\n","\n","# Visualizando os indices das features (variáveis independentes) mais importantes\n","cols = rfe.get_support(indices=True)\n","df.iloc[:,cols]"],"execution_count":null,"outputs":[{"output_type":"stream","text":["[1 1 1 1 1]\n","[ True  True  True  True  True]\n"],"name":"stdout"},{"output_type":"stream","text":["/usr/local/lib/python3.7/dist-packages/sklearn/utils/validation.py:760: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  y = column_or_1d(y, warn=True)\n"],"name":"stderr"},{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>anaemia</th>\n","      <th>creatinine_phosphokinase</th>\n","      <th>diabetes</th>\n","      <th>ejection_fraction</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>75.0</td>\n","      <td>0</td>\n","      <td>582</td>\n","      <td>0</td>\n","      <td>20</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>55.0</td>\n","      <td>0</td>\n","      <td>7861</td>\n","      <td>0</td>\n","      <td>38</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>65.0</td>\n","      <td>0</td>\n","      <td>146</td>\n","      <td>0</td>\n","      <td>20</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>50.0</td>\n","      <td>1</td>\n","      <td>111</td>\n","      <td>0</td>\n","      <td>20</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>65.0</td>\n","      <td>1</td>\n","      <td>160</td>\n","      <td>1</td>\n","      <td>20</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>294</th>\n","      <td>62.0</td>\n","      <td>0</td>\n","      <td>61</td>\n","      <td>1</td>\n","      <td>38</td>\n","    </tr>\n","    <tr>\n","      <th>295</th>\n","      <td>55.0</td>\n","      <td>0</td>\n","      <td>1820</td>\n","      <td>0</td>\n","      <td>38</td>\n","    </tr>\n","    <tr>\n","      <th>296</th>\n","      <td>45.0</td>\n","      <td>0</td>\n","      <td>2060</td>\n","      <td>1</td>\n","      <td>60</td>\n","    </tr>\n","    <tr>\n","      <th>297</th>\n","      <td>45.0</td>\n","      <td>0</td>\n","      <td>2413</td>\n","      <td>0</td>\n","      <td>38</td>\n","    </tr>\n","    <tr>\n","      <th>298</th>\n","      <td>50.0</td>\n","      <td>0</td>\n","      <td>196</td>\n","      <td>0</td>\n","      <td>45</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>299 rows × 5 columns</p>\n","</div>"],"text/plain":["      age  anaemia  creatinine_phosphokinase  diabetes  ejection_fraction\n","0    75.0        0                       582         0                 20\n","1    55.0        0                      7861         0                 38\n","2    65.0        0                       146         0                 20\n","3    50.0        1                       111         0                 20\n","4    65.0        1                       160         1                 20\n","..    ...      ...                       ...       ...                ...\n","294  62.0        0                        61         1                 38\n","295  55.0        0                      1820         0                 38\n","296  45.0        0                      2060         1                 60\n","297  45.0        0                      2413         0                 38\n","298  50.0        0                       196         0                 45\n","\n","[299 rows x 5 columns]"]},"metadata":{"tags":[]},"execution_count":337}]},{"cell_type":"markdown","metadata":{"id":"aL52RQzbeR6o"},"source":["## **Treinando e avaliando novamente o modelo após avaliação de features**"]},{"cell_type":"code","metadata":{"id":"9aSv5Uc0eIMg","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1626039899918,"user_tz":180,"elapsed":63,"user":{"displayName":"Eliane Somavilla","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghy_NFVbfAPw__SCssozvPZEBaCTpwRMETXKEV--g=s64","userId":"12870892689360984547"}},"outputId":"d2ed75d9-1941-4ccb-f5c4-86edf2b57cf4"},"source":["#váriáveis dependentes sem o tempo de acompanhamento e o genero dos pacientes\n","\n","X1 = df.iloc[:,0:9]\n","X2 = df.iloc[:,10:11]\n","X = pd.concat([X1,X2],axis=1)\n","X\n"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>anaemia</th>\n","      <th>creatinine_phosphokinase</th>\n","      <th>diabetes</th>\n","      <th>ejection_fraction</th>\n","      <th>high_blood_pressure</th>\n","      <th>platelets</th>\n","      <th>serum_creatinine</th>\n","      <th>serum_sodium</th>\n","      <th>smoking</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>75.0</td>\n","      <td>0</td>\n","      <td>582</td>\n","      <td>0</td>\n","      <td>20</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1.9</td>\n","      <td>130</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>55.0</td>\n","      <td>0</td>\n","      <td>7861</td>\n","      <td>0</td>\n","      <td>38</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1.1</td>\n","      <td>136</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>65.0</td>\n","      <td>0</td>\n","      <td>146</td>\n","      <td>0</td>\n","      <td>20</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1.3</td>\n","      <td>129</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>50.0</td>\n","      <td>1</td>\n","      <td>111</td>\n","      <td>0</td>\n","      <td>20</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1.9</td>\n","      <td>137</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>65.0</td>\n","      <td>1</td>\n","      <td>160</td>\n","      <td>1</td>\n","      <td>20</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>2.7</td>\n","      <td>116</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>294</th>\n","      <td>62.0</td>\n","      <td>0</td>\n","      <td>61</td>\n","      <td>1</td>\n","      <td>38</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1.1</td>\n","      <td>143</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>295</th>\n","      <td>55.0</td>\n","      <td>0</td>\n","      <td>1820</td>\n","      <td>0</td>\n","      <td>38</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1.2</td>\n","      <td>139</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>296</th>\n","      <td>45.0</td>\n","      <td>0</td>\n","      <td>2060</td>\n","      <td>1</td>\n","      <td>60</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0.8</td>\n","      <td>138</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>297</th>\n","      <td>45.0</td>\n","      <td>0</td>\n","      <td>2413</td>\n","      <td>0</td>\n","      <td>38</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1.4</td>\n","      <td>140</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>298</th>\n","      <td>50.0</td>\n","      <td>0</td>\n","      <td>196</td>\n","      <td>0</td>\n","      <td>45</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1.6</td>\n","      <td>136</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>299 rows × 10 columns</p>\n","</div>"],"text/plain":["      age  anaemia  ...  serum_sodium  smoking\n","0    75.0        0  ...           130        0\n","1    55.0        0  ...           136        0\n","2    65.0        0  ...           129        1\n","3    50.0        1  ...           137        0\n","4    65.0        1  ...           116        0\n","..    ...      ...  ...           ...      ...\n","294  62.0        0  ...           143        1\n","295  55.0        0  ...           139        0\n","296  45.0        0  ...           138        0\n","297  45.0        0  ...           140        1\n","298  50.0        0  ...           136        1\n","\n","[299 rows x 10 columns]"]},"metadata":{"tags":[]},"execution_count":338}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"efGwN0EcxvDx","executionInfo":{"status":"ok","timestamp":1626039899922,"user_tz":180,"elapsed":64,"user":{"displayName":"Eliane Somavilla","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghy_NFVbfAPw__SCssozvPZEBaCTpwRMETXKEV--g=s64","userId":"12870892689360984547"}},"outputId":"095ae1d6-3791-4edb-db2a-9ad7e2ebbe83"},"source":["#váriáveis independentes\n","\n","y = df.iloc[:,12:13]\n","y.head(1)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>DEATH_EVENT</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   DEATH_EVENT\n","0            1"]},"metadata":{"tags":[]},"execution_count":339}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"cntLyvkPx3qz","executionInfo":{"status":"ok","timestamp":1626039899927,"user_tz":180,"elapsed":65,"user":{"displayName":"Eliane Somavilla","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghy_NFVbfAPw__SCssozvPZEBaCTpwRMETXKEV--g=s64","userId":"12870892689360984547"}},"outputId":"c4afd035-d3e9-4481-eb76-8b0b7140faa2"},"source":["#api model_selection  do sklearn faz a separação dos dados de treino e de teste\n","from sklearn.model_selection import train_test_split\n","#os dois primeiros parametros referem ao conjunto de variaveis independentes, variaveis  dependentes, o tamanho do conjunto de teste (comum 20% ou seja, 0.2) e o random_state refere-se a iniciação dos theta0 e theta1 (comum iniciar com zero)\n","#.values transforma os dados em um array/matriz (outro objeto). As APIS que implementam as equações trabalham apenas com objetos arrays/matriz\n","X_treino, X_teste, y_treino, y_teste = train_test_split(X.values,y.values, test_size=0.2, random_state = 0)\n","\n","#shape para ver o formato do X do y e o formato total da amostra\n","X_treino.shape,X_teste.shape,y_treino.shape,y_teste.shape,X.shape"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["((239, 10), (60, 10), (239, 1), (60, 1), (299, 10))"]},"metadata":{"tags":[]},"execution_count":340}]},{"cell_type":"code","metadata":{"id":"4QvYQnTbx7ss"},"source":["#normalizar as variaveis para  escalar e aproximar os valores  do conjunto X\n","from sklearn.preprocessing import StandardScaler\n","sc = StandardScaler()\n","X_train = sc.fit_transform(X_treino)\n","X_test = sc.transform(X_teste)\n","#X_test"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"P6tqK_Jdx-d9","executionInfo":{"status":"ok","timestamp":1626039900297,"user_tz":180,"elapsed":426,"user":{"displayName":"Eliane Somavilla","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghy_NFVbfAPw__SCssozvPZEBaCTpwRMETXKEV--g=s64","userId":"12870892689360984547"}},"outputId":"5f711b4f-ce30-44cd-accb-cc6cdda253c4"},"source":["# treinando o modelo \n","from sklearn.svm import SVC\n","# O kernel ajuda a achar a melhor decision boundery\n","#rbf é um kernel linear , ou seja, tenta seguir uma distribuição normal dos dados.  mas existem outros kelnels que podem ser usadas qdo o, por exemplo, nao existe uma distribuição normal de dados e pode ser usado  polimonio\n","#para este modelo o melhor resultado obtido foi através do uso do kernel linear\n","modelo_svm = SVC(kernel='linear', random_state = 0)\n","modelo_svm.fit(X_train,y_treino)\n","#predição com a o X_test\n","y_pred_svm = modelo_svm.predict(X_test)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.7/dist-packages/sklearn/utils/validation.py:760: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  y = column_or_1d(y, warn=True)\n"],"name":"stderr"}]},{"cell_type":"code","metadata":{"id":"54HzK69HeYJ0","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1626039900302,"user_tz":180,"elapsed":13,"user":{"displayName":"Eliane Somavilla","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghy_NFVbfAPw__SCssozvPZEBaCTpwRMETXKEV--g=s64","userId":"12870892689360984547"}},"outputId":"50740234-7e18-4769-c70a-b6b34d074e49"},"source":["#Matriz de confusão contabiliza se o valor previsto bateu com o valor real (verdadeiro positivo/verdadeiro negativo e falso positivo/falso negativo)\n","from sklearn.metrics import confusion_matrix\n","\n","cm_svm = confusion_matrix(y_teste,y_pred_svm)\n","\n","#calculo da acurácia usando matriz de confusão - SVM\n","acc_svm = (cm_svm[0,0]+cm_svm[1,1])/cm_svm.sum()\n","cm_svm\n","print('SVM: ', acc_svm)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["SVM:  0.75\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"G7FXE32RkeNK"},"source":["# **Random Forest Classifier**"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ddMY_nO3SS0W","executionInfo":{"status":"ok","timestamp":1626038432109,"user_tz":180,"elapsed":251,"user":{"displayName":"Eliane Somavilla","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghy_NFVbfAPw__SCssozvPZEBaCTpwRMETXKEV--g=s64","userId":"12870892689360984547"}},"outputId":"c12b947c-b77d-4ed1-fb3a-317bf44fdeaa"},"source":["# treinando o modelo \n","from sklearn.ensemble import RandomForestClassifier\n","# 7 arvores foi o melhor parâmetro para usalizar no RFC\n","modelo_rf = RandomForestClassifier(n_estimators = 7, random_state = 0)\n","modelo_rf.fit(X_train,y_treino)\n","#predição com a o X_test\n","y_pred_rf = modelo_rf.predict(X_test)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:5: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().\n","  \"\"\"\n"],"name":"stderr"}]},{"cell_type":"markdown","metadata":{"id":"LTZQLgdOtGt9"},"source":["## **Analisando as melhores features (variáveis independentes) - RFC**"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"mHRPp6cyU4WM","executionInfo":{"status":"ok","timestamp":1626037429694,"user_tz":180,"elapsed":34,"user":{"displayName":"Eliane Somavilla","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghy_NFVbfAPw__SCssozvPZEBaCTpwRMETXKEV--g=s64","userId":"12870892689360984547"}},"outputId":"013551d4-eeff-4e9c-8bf5-2b6b06603f60"},"source":["# Métodos  assembly podem ser usados para estimar a importância de cada atributo. Ele retorna um score para cada atributo, quanto maior o score, maior é a importância desse atributo.\n","modelo_rf.feature_importances_"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0.18331988, 0.02605259, 0.21731946, 0.02750957, 0.18855621,\n","       0.01420469, 0.02389614, 0.19603082, 0.10637137, 0.01673927])"]},"metadata":{"tags":[]},"execution_count":47}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"adNXAVYNcOMi","executionInfo":{"status":"ok","timestamp":1626037429699,"user_tz":180,"elapsed":33,"user":{"displayName":"Eliane Somavilla","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghy_NFVbfAPw__SCssozvPZEBaCTpwRMETXKEV--g=s64","userId":"12870892689360984547"}},"outputId":"1964c9e4-947f-4614-a69a-9f75432d03dd"},"source":["#Criando um Dataframe com as colunas e seus scores\n","feature_importances = pd.DataFrame(modelo_rf.feature_importances_, index = X.columns,\n","                                    columns=['importance']).sort_values('importance',   ascending=False)\n","\n","feature_importances "],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>importance</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>creatinine_phosphokinase</th>\n","      <td>0.217319</td>\n","    </tr>\n","    <tr>\n","      <th>serum_creatinine</th>\n","      <td>0.196031</td>\n","    </tr>\n","    <tr>\n","      <th>ejection_fraction</th>\n","      <td>0.188556</td>\n","    </tr>\n","    <tr>\n","      <th>age</th>\n","      <td>0.183320</td>\n","    </tr>\n","    <tr>\n","      <th>serum_sodium</th>\n","      <td>0.106371</td>\n","    </tr>\n","    <tr>\n","      <th>diabetes</th>\n","      <td>0.027510</td>\n","    </tr>\n","    <tr>\n","      <th>anaemia</th>\n","      <td>0.026053</td>\n","    </tr>\n","    <tr>\n","      <th>platelets</th>\n","      <td>0.023896</td>\n","    </tr>\n","    <tr>\n","      <th>smoking</th>\n","      <td>0.016739</td>\n","    </tr>\n","    <tr>\n","      <th>high_blood_pressure</th>\n","      <td>0.014205</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["                          importance\n","creatinine_phosphokinase    0.217319\n","serum_creatinine            0.196031\n","ejection_fraction           0.188556\n","age                         0.183320\n","serum_sodium                0.106371\n","diabetes                    0.027510\n","anaemia                     0.026053\n","platelets                   0.023896\n","smoking                     0.016739\n","high_blood_pressure         0.014205"]},"metadata":{"tags":[]},"execution_count":48}]},{"cell_type":"code","metadata":{"id":"rHSb3UwAc8eB","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1626037429962,"user_tz":180,"elapsed":293,"user":{"displayName":"Eliane Somavilla","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghy_NFVbfAPw__SCssozvPZEBaCTpwRMETXKEV--g=s64","userId":"12870892689360984547"}},"outputId":"40f1e776-757e-423c-fa5b-cdacfb9debd3"},"source":["# Visualizando as importâncias de forma gráfica\n","feature_importances.plot(kind='bar')"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7fcd4277fc50>"]},"metadata":{"tags":[]},"execution_count":49},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"dn-C1YvX622o","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1626037430582,"user_tz":180,"elapsed":636,"user":{"displayName":"Eliane Somavilla","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghy_NFVbfAPw__SCssozvPZEBaCTpwRMETXKEV--g=s64","userId":"12870892689360984547"}},"outputId":"0cd17a22-75c0-47ef-d6a8-6bd7b249a208"},"source":["# outra forma gráfica  com a biblioteca seaborn\n","\n","import seaborn as sns\n","\n","importances = pd.Series(data=modelo_rf.feature_importances_, index = X.columns)\n","sns.barplot(x=importances, y=importances.index, orient='h').set_title('Importância de cada feature')\n","\n"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Text(0.5, 1.0, 'Importância de cada feature')"]},"metadata":{"tags":[]},"execution_count":50},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"markdown","metadata":{"id":"SfmrF9Kcs9oo"},"source":["## **Treinando e avaliando novamente o modelo após avaliação de features**"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xB5tNLvg3As2","executionInfo":{"status":"ok","timestamp":1626037430584,"user_tz":180,"elapsed":93,"user":{"displayName":"Eliane Somavilla","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghy_NFVbfAPw__SCssozvPZEBaCTpwRMETXKEV--g=s64","userId":"12870892689360984547"}},"outputId":"61d6553b-38b0-45a8-afe0-eb67f19fe3ab"},"source":["#váriáveis dependentes sem o tempo de acompanhamento e o genero dos pacientes\n","\n","X1 = df.iloc[:,0:9]\n","X2 = df.iloc[:,10:11]\n","X = pd.concat([X1,X2],axis=1)\n","X"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>anaemia</th>\n","      <th>creatinine_phosphokinase</th>\n","      <th>diabetes</th>\n","      <th>ejection_fraction</th>\n","      <th>high_blood_pressure</th>\n","      <th>platelets</th>\n","      <th>serum_creatinine</th>\n","      <th>serum_sodium</th>\n","      <th>smoking</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>75.0</td>\n","      <td>0</td>\n","      <td>582</td>\n","      <td>0</td>\n","      <td>20</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1.9</td>\n","      <td>130</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>55.0</td>\n","      <td>0</td>\n","      <td>7861</td>\n","      <td>0</td>\n","      <td>38</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1.1</td>\n","      <td>136</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>65.0</td>\n","      <td>0</td>\n","      <td>146</td>\n","      <td>0</td>\n","      <td>20</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1.3</td>\n","      <td>129</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>50.0</td>\n","      <td>1</td>\n","      <td>111</td>\n","      <td>0</td>\n","      <td>20</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1.9</td>\n","      <td>137</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>65.0</td>\n","      <td>1</td>\n","      <td>160</td>\n","      <td>1</td>\n","      <td>20</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>2.7</td>\n","      <td>116</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>294</th>\n","      <td>62.0</td>\n","      <td>0</td>\n","      <td>61</td>\n","      <td>1</td>\n","      <td>38</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1.1</td>\n","      <td>143</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>295</th>\n","      <td>55.0</td>\n","      <td>0</td>\n","      <td>1820</td>\n","      <td>0</td>\n","      <td>38</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1.2</td>\n","      <td>139</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>296</th>\n","      <td>45.0</td>\n","      <td>0</td>\n","      <td>2060</td>\n","      <td>1</td>\n","      <td>60</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0.8</td>\n","      <td>138</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>297</th>\n","      <td>45.0</td>\n","      <td>0</td>\n","      <td>2413</td>\n","      <td>0</td>\n","      <td>38</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1.4</td>\n","      <td>140</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>298</th>\n","      <td>50.0</td>\n","      <td>0</td>\n","      <td>196</td>\n","      <td>0</td>\n","      <td>45</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1.6</td>\n","      <td>136</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>299 rows × 10 columns</p>\n","</div>"],"text/plain":["      age  anaemia  ...  serum_sodium  smoking\n","0    75.0        0  ...           130        0\n","1    55.0        0  ...           136        0\n","2    65.0        0  ...           129        1\n","3    50.0        1  ...           137        0\n","4    65.0        1  ...           116        0\n","..    ...      ...  ...           ...      ...\n","294  62.0        0  ...           143        1\n","295  55.0        0  ...           139        0\n","296  45.0        0  ...           138        0\n","297  45.0        0  ...           140        1\n","298  50.0        0  ...           136        1\n","\n","[299 rows x 10 columns]"]},"metadata":{"tags":[]},"execution_count":51}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"bU6YlCov3DuE","executionInfo":{"status":"ok","timestamp":1626037430591,"user_tz":180,"elapsed":93,"user":{"displayName":"Eliane Somavilla","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghy_NFVbfAPw__SCssozvPZEBaCTpwRMETXKEV--g=s64","userId":"12870892689360984547"}},"outputId":"4dcf0f86-f364-45c1-f75b-97828b35c0fe"},"source":["#váriáveis independentes\n","\n","y = df.iloc[:,12:13]\n","y.head(1)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>DEATH_EVENT</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   DEATH_EVENT\n","0            1"]},"metadata":{"tags":[]},"execution_count":52}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vsWgHpXq3G_V","executionInfo":{"status":"ok","timestamp":1626037430594,"user_tz":180,"elapsed":93,"user":{"displayName":"Eliane Somavilla","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghy_NFVbfAPw__SCssozvPZEBaCTpwRMETXKEV--g=s64","userId":"12870892689360984547"}},"outputId":"8d8a0d70-1006-49ca-bda0-898cbfd5a057"},"source":["#api model_selection  do sklearn faz a separação dos dados de treino e de teste\n","from sklearn.model_selection import train_test_split\n","#os dois primeiros parametros referem ao conjunto de variaveis independentes, variaveis  dependentes, o tamanho do conjunto de teste (comum 20% ou seja, 0.2) e o random_state refere-se a iniciação dos theta0 e theta1 (comum iniciar com zero)\n","#.values transforma os dados em um array/matriz (outro objeto). As APIS que implementam as equações trabalham apenas com objetos arrays/matriz\n","X_treino, X_teste, y_treino, y_teste = train_test_split(X.values,y.values, test_size=0.2, random_state = 0)\n","\n","#shape para ver o formato do X do y e o formato total da amostra\n","X_treino.shape,X_teste.shape,y_treino.shape,y_teste.shape,X.shape"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["((239, 10), (60, 10), (239, 1), (60, 1), (299, 10))"]},"metadata":{"tags":[]},"execution_count":53}]},{"cell_type":"code","metadata":{"id":"HizUqPXt3JbS"},"source":["#normalizar as variaveis para  escalar e aproximar os valores  do conjunto X\n","from sklearn.preprocessing import StandardScaler\n","sc = StandardScaler()\n","X_train = sc.fit_transform(X_treino)\n","X_test = sc.transform(X_teste)\n","#X_test"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"bCurI1tPtD0m","executionInfo":{"status":"ok","timestamp":1626037430596,"user_tz":180,"elapsed":90,"user":{"displayName":"Eliane Somavilla","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghy_NFVbfAPw__SCssozvPZEBaCTpwRMETXKEV--g=s64","userId":"12870892689360984547"}},"outputId":"c1d13d22-3e8f-424e-b316-d8095c212ae3"},"source":["# treinando o modelo \n","from sklearn.ensemble import RandomForestClassifier\n","# 7 arvores foi o melhor parâmetro para usalizar no RFC\n","modelo_rf = RandomForestClassifier(n_estimators = 7, random_state = 0)\n","modelo_rf.fit(X_train,y_treino)\n","#predição com a o X_test\n","y_pred_rf = modelo_rf.predict(X_test)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:5: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().\n","  \"\"\"\n"],"name":"stderr"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fc4-rh_Pta2f","executionInfo":{"status":"ok","timestamp":1626037431054,"user_tz":180,"elapsed":155,"user":{"displayName":"Eliane Somavilla","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghy_NFVbfAPw__SCssozvPZEBaCTpwRMETXKEV--g=s64","userId":"12870892689360984547"}},"outputId":"abc63f66-84e5-48e1-b2af-c8c2e1619a38"},"source":["#Matriz de confusão contabiliza se o valor previsto bateu com o valor real (verdadeiro positivo/verdadeiro negativo e falso positivo/falso negativo)\n","from sklearn.metrics import confusion_matrix\n","\n","cm_rf = confusion_matrix(y_teste,y_pred_rf)\n","\n","#calculo da acurácia usando matriz de confusão - RFC\n","acc_rf = (cm_rf[0,0]+cm_rf[1,1])/cm_rf.sum()\n","cm_rf\n","print('RFC: ', acc_rf)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["RFC:  0.65\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"OtFkJasG4_LF"},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"aB39Y1FzS1AO"},"source":["# **Logistic Regression**"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"o6x1KROyS0ri","executionInfo":{"status":"ok","timestamp":1626038443546,"user_tz":180,"elapsed":266,"user":{"displayName":"Eliane Somavilla","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghy_NFVbfAPw__SCssozvPZEBaCTpwRMETXKEV--g=s64","userId":"12870892689360984547"}},"outputId":"9818bef9-0d99-4129-c9bb-2328b77b29cc"},"source":["# treinando o modelo \n","from sklearn.linear_model import LogisticRegression\n","modelo_log = LogisticRegression(random_state = 0)\n","modelo_log.fit(X_train,y_treino)\n","#predição com a o X_test\n","y_pred_log = modelo_log.predict(X_test)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.7/dist-packages/sklearn/utils/validation.py:760: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  y = column_or_1d(y, warn=True)\n"],"name":"stderr"}]},{"cell_type":"markdown","metadata":{"id":"RTFq36LyvQXt"},"source":["## **Analisando as melhores features (variáveis independentes) - Logist. Regres.**"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":490},"id":"JKLHBOSumWuc","executionInfo":{"status":"ok","timestamp":1626038176465,"user_tz":180,"elapsed":53,"user":{"displayName":"Eliane Somavilla","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghy_NFVbfAPw__SCssozvPZEBaCTpwRMETXKEV--g=s64","userId":"12870892689360984547"}},"outputId":"b90f022b-11d9-4750-9956-ec8c1a60f6e1"},"source":["from sklearn.linear_model import LogisticRegression\n","modelo_log  = LogisticRegression()\n","#Remove recursivamente os atributos e constrói o modelo com os atributos remanescentes\n","from sklearn.feature_selection import RFE\n","\n","#avaliação das melhores features\n","rfe = RFE(modelo_log, 10)\n","fit = rfe.fit(X_train, y_treino)\n","\n","# Mostrando o número de features:\n","print (\"Número de features: {}\".format(fit.n_features_))  \n","\n","\n","# Visualizando os indices das features (variáveis independentes) mais importantes\n","cols = fit.get_support(indices=True)\n","df.iloc[:,cols]\n"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Número de features: 10\n"],"name":"stdout"},{"output_type":"stream","text":["/usr/local/lib/python3.7/dist-packages/sklearn/utils/validation.py:760: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  y = column_or_1d(y, warn=True)\n"],"name":"stderr"},{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>anaemia</th>\n","      <th>creatinine_phosphokinase</th>\n","      <th>diabetes</th>\n","      <th>ejection_fraction</th>\n","      <th>high_blood_pressure</th>\n","      <th>platelets</th>\n","      <th>serum_creatinine</th>\n","      <th>serum_sodium</th>\n","      <th>sex</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>75.0</td>\n","      <td>0</td>\n","      <td>582</td>\n","      <td>0</td>\n","      <td>20</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1.9</td>\n","      <td>130</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>55.0</td>\n","      <td>0</td>\n","      <td>7861</td>\n","      <td>0</td>\n","      <td>38</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1.1</td>\n","      <td>136</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>65.0</td>\n","      <td>0</td>\n","      <td>146</td>\n","      <td>0</td>\n","      <td>20</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1.3</td>\n","      <td>129</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>50.0</td>\n","      <td>1</td>\n","      <td>111</td>\n","      <td>0</td>\n","      <td>20</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1.9</td>\n","      <td>137</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>65.0</td>\n","      <td>1</td>\n","      <td>160</td>\n","      <td>1</td>\n","      <td>20</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>2.7</td>\n","      <td>116</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>294</th>\n","      <td>62.0</td>\n","      <td>0</td>\n","      <td>61</td>\n","      <td>1</td>\n","      <td>38</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1.1</td>\n","      <td>143</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>295</th>\n","      <td>55.0</td>\n","      <td>0</td>\n","      <td>1820</td>\n","      <td>0</td>\n","      <td>38</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1.2</td>\n","      <td>139</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>296</th>\n","      <td>45.0</td>\n","      <td>0</td>\n","      <td>2060</td>\n","      <td>1</td>\n","      <td>60</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0.8</td>\n","      <td>138</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>297</th>\n","      <td>45.0</td>\n","      <td>0</td>\n","      <td>2413</td>\n","      <td>0</td>\n","      <td>38</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1.4</td>\n","      <td>140</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>298</th>\n","      <td>50.0</td>\n","      <td>0</td>\n","      <td>196</td>\n","      <td>0</td>\n","      <td>45</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1.6</td>\n","      <td>136</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>299 rows × 10 columns</p>\n","</div>"],"text/plain":["      age  anaemia  ...  serum_sodium  sex\n","0    75.0        0  ...           130    1\n","1    55.0        0  ...           136    1\n","2    65.0        0  ...           129    1\n","3    50.0        1  ...           137    1\n","4    65.0        1  ...           116    0\n","..    ...      ...  ...           ...  ...\n","294  62.0        0  ...           143    1\n","295  55.0        0  ...           139    0\n","296  45.0        0  ...           138    0\n","297  45.0        0  ...           140    1\n","298  50.0        0  ...           136    1\n","\n","[299 rows x 10 columns]"]},"metadata":{"tags":[]},"execution_count":37}]},{"cell_type":"markdown","metadata":{"id":"jxiL2XJ7ovti"},"source":["## **Treinando e avaliando novamente o modelo após avaliação de features**"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":419},"id":"YMN1Ur4E6Ben","executionInfo":{"status":"ok","timestamp":1626038176467,"user_tz":180,"elapsed":49,"user":{"displayName":"Eliane Somavilla","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghy_NFVbfAPw__SCssozvPZEBaCTpwRMETXKEV--g=s64","userId":"12870892689360984547"}},"outputId":"4dcf13a3-a566-4bee-bd2c-8ddb8b6acbe0"},"source":["#váriáveis dependentes sem o tempo de acompanhamento e o genero dos pacientes\n","\n","X1 = df.iloc[:,0:9]\n","X2 = df.iloc[:,10:11]\n","X = pd.concat([X1,X2],axis=1)\n","X"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>anaemia</th>\n","      <th>creatinine_phosphokinase</th>\n","      <th>diabetes</th>\n","      <th>ejection_fraction</th>\n","      <th>high_blood_pressure</th>\n","      <th>platelets</th>\n","      <th>serum_creatinine</th>\n","      <th>serum_sodium</th>\n","      <th>smoking</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>75.0</td>\n","      <td>0</td>\n","      <td>582</td>\n","      <td>0</td>\n","      <td>20</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1.9</td>\n","      <td>130</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>55.0</td>\n","      <td>0</td>\n","      <td>7861</td>\n","      <td>0</td>\n","      <td>38</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1.1</td>\n","      <td>136</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>65.0</td>\n","      <td>0</td>\n","      <td>146</td>\n","      <td>0</td>\n","      <td>20</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1.3</td>\n","      <td>129</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>50.0</td>\n","      <td>1</td>\n","      <td>111</td>\n","      <td>0</td>\n","      <td>20</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1.9</td>\n","      <td>137</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>65.0</td>\n","      <td>1</td>\n","      <td>160</td>\n","      <td>1</td>\n","      <td>20</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>2.7</td>\n","      <td>116</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>294</th>\n","      <td>62.0</td>\n","      <td>0</td>\n","      <td>61</td>\n","      <td>1</td>\n","      <td>38</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1.1</td>\n","      <td>143</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>295</th>\n","      <td>55.0</td>\n","      <td>0</td>\n","      <td>1820</td>\n","      <td>0</td>\n","      <td>38</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1.2</td>\n","      <td>139</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>296</th>\n","      <td>45.0</td>\n","      <td>0</td>\n","      <td>2060</td>\n","      <td>1</td>\n","      <td>60</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0.8</td>\n","      <td>138</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>297</th>\n","      <td>45.0</td>\n","      <td>0</td>\n","      <td>2413</td>\n","      <td>0</td>\n","      <td>38</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1.4</td>\n","      <td>140</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>298</th>\n","      <td>50.0</td>\n","      <td>0</td>\n","      <td>196</td>\n","      <td>0</td>\n","      <td>45</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1.6</td>\n","      <td>136</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>299 rows × 10 columns</p>\n","</div>"],"text/plain":["      age  anaemia  ...  serum_sodium  smoking\n","0    75.0        0  ...           130        0\n","1    55.0        0  ...           136        0\n","2    65.0        0  ...           129        1\n","3    50.0        1  ...           137        0\n","4    65.0        1  ...           116        0\n","..    ...      ...  ...           ...      ...\n","294  62.0        0  ...           143        1\n","295  55.0        0  ...           139        0\n","296  45.0        0  ...           138        0\n","297  45.0        0  ...           140        1\n","298  50.0        0  ...           136        1\n","\n","[299 rows x 10 columns]"]},"metadata":{"tags":[]},"execution_count":38}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":80},"id":"Q0mU7hS36Hye","executionInfo":{"status":"ok","timestamp":1626038176473,"user_tz":180,"elapsed":52,"user":{"displayName":"Eliane Somavilla","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghy_NFVbfAPw__SCssozvPZEBaCTpwRMETXKEV--g=s64","userId":"12870892689360984547"}},"outputId":"18d91e7f-f5d1-4a68-f567-f85b5deff0de"},"source":["#váriáveis independentes\n","\n","y = df.iloc[:,12:13]\n","y.head(1)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>DEATH_EVENT</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   DEATH_EVENT\n","0            1"]},"metadata":{"tags":[]},"execution_count":39}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"MLECGVBj6LV6","executionInfo":{"status":"ok","timestamp":1626038176475,"user_tz":180,"elapsed":52,"user":{"displayName":"Eliane Somavilla","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghy_NFVbfAPw__SCssozvPZEBaCTpwRMETXKEV--g=s64","userId":"12870892689360984547"}},"outputId":"7d777f09-69c4-4744-aa4c-1d7b0db2389a"},"source":["#api model_selection  do sklearn faz a separação dos dados de treino e de teste\n","from sklearn.model_selection import train_test_split\n","#os dois primeiros parametros referem ao conjunto de variaveis independentes, variaveis  dependentes, o tamanho do conjunto de teste (comum 20% ou seja, 0.2) e o random_state refere-se a iniciação dos theta0 e theta1 (comum iniciar com zero)\n","#.values transforma os dados em um array/matriz (outro objeto). As APIS que implementam as equações trabalham apenas com objetos arrays/matriz\n","X_treino, X_teste, y_treino, y_teste = train_test_split(X.values,y.values, test_size=0.2, random_state = 0)\n","\n","#shape para ver o formato do X do y e o formato total da amostra\n","X_treino.shape,X_teste.shape,y_treino.shape,y_teste.shape,X.shape"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["((239, 10), (60, 10), (239, 1), (60, 1), (299, 10))"]},"metadata":{"tags":[]},"execution_count":40}]},{"cell_type":"code","metadata":{"id":"D8N6Y5Dy6PYV"},"source":["#normalizar as variaveis para  escalar e aproximar os valores  do conjunto X\n","from sklearn.preprocessing import StandardScaler\n","sc = StandardScaler()\n","X_train = sc.fit_transform(X_treino)\n","X_test = sc.transform(X_teste)\n","#X_test"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fJsLGWuoo-SG","executionInfo":{"status":"ok","timestamp":1626038176794,"user_tz":180,"elapsed":20,"user":{"displayName":"Eliane Somavilla","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghy_NFVbfAPw__SCssozvPZEBaCTpwRMETXKEV--g=s64","userId":"12870892689360984547"}},"outputId":"d4fff2a5-4503-436b-c327-9de788b6d0d5"},"source":["# treinando o modelo \n","from sklearn.linear_model import LogisticRegression\n","modelo_log = LogisticRegression(random_state = 0)\n","modelo_log.fit(X_train,y_treino)\n","#predição com a o X_test\n","y_pred_log = modelo_log.predict(X_test)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.7/dist-packages/sklearn/utils/validation.py:760: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  y = column_or_1d(y, warn=True)\n"],"name":"stderr"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"R1tlJ2_ApH6Y","executionInfo":{"status":"ok","timestamp":1626038176795,"user_tz":180,"elapsed":19,"user":{"displayName":"Eliane Somavilla","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghy_NFVbfAPw__SCssozvPZEBaCTpwRMETXKEV--g=s64","userId":"12870892689360984547"}},"outputId":"078443fc-6f40-4d7b-d050-3d94c96e5284"},"source":["#Matriz de confusão contabiliza se o valor previsto bateu com o valor real (verdadeiro positivo/verdadeiro negativo e falso positivo/falso negativo)\n","from sklearn.metrics import confusion_matrix\n","\n","cm_log = confusion_matrix(y_teste,y_pred_log)\n","\n","#calculo da acurácia usando matriz de confusão - LOG\n","acc_log = (cm_log[0,0]+cm_log[1,1])/cm_log.sum()\n","cm_log\n","print('log: ', acc_log)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["log:  0.7166666666666667\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"3TUTufxzUSmn"},"source":["# **Regressão Linear Multivariada**"]},{"cell_type":"code","metadata":{"id":"XTK6P2MlUCva"},"source":["#a api linear_model do sklearn faz o treinamento, o LinearRegression faz o treinamento de forma linear. Pra ele nao importa se é uma ou N variaveis, entao dá pra usar na regressão multivariada\n","from sklearn.linear_model import LinearRegression\n","\n","modelo_mult = LinearRegression()\n","#passa o conjunto de treinamento para o objeto 'modelo' e realiza o treinamento\n","modelo_mult.fit(X_train,y_treino)\n","y_pred_multvar = modelo_mult.predict(X_test)\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"357HSAOiW_xC","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1626037431103,"user_tz":180,"elapsed":182,"user":{"displayName":"Eliane Somavilla","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghy_NFVbfAPw__SCssozvPZEBaCTpwRMETXKEV--g=s64","userId":"12870892689360984547"}},"outputId":"ea2660fd-f232-4300-a565-1e7d2e38cebd"},"source":["#para medir a acurácia usar a api metrics, especificamente a função r2_score\n","from sklearn.metrics import r2_score\n","#acurácia do conjunto de teste\n","r2_score(y_teste,y_pred_multvar)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.15641269919351364"]},"metadata":{"tags":[]},"execution_count":66}]},{"cell_type":"markdown","metadata":{"id":"iWy0vgbFw7nz"},"source":["## **Analisando as melhores features (variáveis independentes) - Regres. Linear Multi.**"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"M6OVTiHytuWT","executionInfo":{"status":"ok","timestamp":1626037431111,"user_tz":180,"elapsed":189,"user":{"displayName":"Eliane Somavilla","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghy_NFVbfAPw__SCssozvPZEBaCTpwRMETXKEV--g=s64","userId":"12870892689360984547"}},"outputId":"c408c248-2b21-443c-da49-f68a68780627"},"source":["from sklearn.linear_model import LinearRegression\n","\n","modelo_mult = LinearRegression()\n","#Remove recursivamente os atributos e constrói o modelo com os atributos remanescentes\n","from sklearn.feature_selection import RFE\n","\n","#avaliação das melhores features\n","rfe = RFE(modelo_mult, 10)\n","fit = rfe.fit(X_train, y_treino)\n","\n","# Mostrando o número de features:\n","print (\"Número de features: {}\".format(fit.n_features_))  \n","\n","# Visualizando os indices das features (variáveis independentes) mais importantes\n","cols = fit.get_support(indices=True)\n","df.iloc[:,cols]"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Número de features: 10\n"],"name":"stdout"},{"output_type":"stream","text":["/usr/local/lib/python3.7/dist-packages/sklearn/utils/validation.py:760: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  y = column_or_1d(y, warn=True)\n"],"name":"stderr"},{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>anaemia</th>\n","      <th>creatinine_phosphokinase</th>\n","      <th>diabetes</th>\n","      <th>ejection_fraction</th>\n","      <th>high_blood_pressure</th>\n","      <th>platelets</th>\n","      <th>serum_creatinine</th>\n","      <th>serum_sodium</th>\n","      <th>sex</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>75.0</td>\n","      <td>0</td>\n","      <td>582</td>\n","      <td>0</td>\n","      <td>20</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1.9</td>\n","      <td>130</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>55.0</td>\n","      <td>0</td>\n","      <td>7861</td>\n","      <td>0</td>\n","      <td>38</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1.1</td>\n","      <td>136</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>65.0</td>\n","      <td>0</td>\n","      <td>146</td>\n","      <td>0</td>\n","      <td>20</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1.3</td>\n","      <td>129</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>50.0</td>\n","      <td>1</td>\n","      <td>111</td>\n","      <td>0</td>\n","      <td>20</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1.9</td>\n","      <td>137</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>65.0</td>\n","      <td>1</td>\n","      <td>160</td>\n","      <td>1</td>\n","      <td>20</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>2.7</td>\n","      <td>116</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>294</th>\n","      <td>62.0</td>\n","      <td>0</td>\n","      <td>61</td>\n","      <td>1</td>\n","      <td>38</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1.1</td>\n","      <td>143</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>295</th>\n","      <td>55.0</td>\n","      <td>0</td>\n","      <td>1820</td>\n","      <td>0</td>\n","      <td>38</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1.2</td>\n","      <td>139</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>296</th>\n","      <td>45.0</td>\n","      <td>0</td>\n","      <td>2060</td>\n","      <td>1</td>\n","      <td>60</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0.8</td>\n","      <td>138</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>297</th>\n","      <td>45.0</td>\n","      <td>0</td>\n","      <td>2413</td>\n","      <td>0</td>\n","      <td>38</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1.4</td>\n","      <td>140</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>298</th>\n","      <td>50.0</td>\n","      <td>0</td>\n","      <td>196</td>\n","      <td>0</td>\n","      <td>45</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1.6</td>\n","      <td>136</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>299 rows × 10 columns</p>\n","</div>"],"text/plain":["      age  anaemia  ...  serum_sodium  sex\n","0    75.0        0  ...           130    1\n","1    55.0        0  ...           136    1\n","2    65.0        0  ...           129    1\n","3    50.0        1  ...           137    1\n","4    65.0        1  ...           116    0\n","..    ...      ...  ...           ...  ...\n","294  62.0        0  ...           143    1\n","295  55.0        0  ...           139    0\n","296  45.0        0  ...           138    0\n","297  45.0        0  ...           140    1\n","298  50.0        0  ...           136    1\n","\n","[299 rows x 10 columns]"]},"metadata":{"tags":[]},"execution_count":67}]},{"cell_type":"markdown","metadata":{"id":"zuEVtpdrwkSm"},"source":["## **Treinando e avaliando novamente o modelo após avaliação de features**"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ahCsnrs688zH","executionInfo":{"status":"ok","timestamp":1626037431114,"user_tz":180,"elapsed":190,"user":{"displayName":"Eliane Somavilla","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghy_NFVbfAPw__SCssozvPZEBaCTpwRMETXKEV--g=s64","userId":"12870892689360984547"}},"outputId":"628cc203-bef8-4d02-b191-31e0682e4d20"},"source":["#váriáveis dependentes sem o tempo de acompanhamento e o genero dos pacientes\n","\n","X1 = df.iloc[:,0:9]\n","X2 = df.iloc[:,10:11]\n","X = pd.concat([X1,X2],axis=1)\n","X"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>anaemia</th>\n","      <th>creatinine_phosphokinase</th>\n","      <th>diabetes</th>\n","      <th>ejection_fraction</th>\n","      <th>high_blood_pressure</th>\n","      <th>platelets</th>\n","      <th>serum_creatinine</th>\n","      <th>serum_sodium</th>\n","      <th>smoking</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>75.0</td>\n","      <td>0</td>\n","      <td>582</td>\n","      <td>0</td>\n","      <td>20</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1.9</td>\n","      <td>130</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>55.0</td>\n","      <td>0</td>\n","      <td>7861</td>\n","      <td>0</td>\n","      <td>38</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1.1</td>\n","      <td>136</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>65.0</td>\n","      <td>0</td>\n","      <td>146</td>\n","      <td>0</td>\n","      <td>20</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1.3</td>\n","      <td>129</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>50.0</td>\n","      <td>1</td>\n","      <td>111</td>\n","      <td>0</td>\n","      <td>20</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1.9</td>\n","      <td>137</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>65.0</td>\n","      <td>1</td>\n","      <td>160</td>\n","      <td>1</td>\n","      <td>20</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>2.7</td>\n","      <td>116</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>294</th>\n","      <td>62.0</td>\n","      <td>0</td>\n","      <td>61</td>\n","      <td>1</td>\n","      <td>38</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1.1</td>\n","      <td>143</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>295</th>\n","      <td>55.0</td>\n","      <td>0</td>\n","      <td>1820</td>\n","      <td>0</td>\n","      <td>38</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1.2</td>\n","      <td>139</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>296</th>\n","      <td>45.0</td>\n","      <td>0</td>\n","      <td>2060</td>\n","      <td>1</td>\n","      <td>60</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0.8</td>\n","      <td>138</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>297</th>\n","      <td>45.0</td>\n","      <td>0</td>\n","      <td>2413</td>\n","      <td>0</td>\n","      <td>38</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1.4</td>\n","      <td>140</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>298</th>\n","      <td>50.0</td>\n","      <td>0</td>\n","      <td>196</td>\n","      <td>0</td>\n","      <td>45</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1.6</td>\n","      <td>136</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>299 rows × 10 columns</p>\n","</div>"],"text/plain":["      age  anaemia  ...  serum_sodium  smoking\n","0    75.0        0  ...           130        0\n","1    55.0        0  ...           136        0\n","2    65.0        0  ...           129        1\n","3    50.0        1  ...           137        0\n","4    65.0        1  ...           116        0\n","..    ...      ...  ...           ...      ...\n","294  62.0        0  ...           143        1\n","295  55.0        0  ...           139        0\n","296  45.0        0  ...           138        0\n","297  45.0        0  ...           140        1\n","298  50.0        0  ...           136        1\n","\n","[299 rows x 10 columns]"]},"metadata":{"tags":[]},"execution_count":68}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"YUQCz6Ys9EAV","executionInfo":{"status":"ok","timestamp":1626037431116,"user_tz":180,"elapsed":189,"user":{"displayName":"Eliane Somavilla","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghy_NFVbfAPw__SCssozvPZEBaCTpwRMETXKEV--g=s64","userId":"12870892689360984547"}},"outputId":"75bc974c-f7b9-4f95-f6fd-18dacbfb8e3e"},"source":["#váriáveis independentes\n","\n","y = df.iloc[:,12:13]\n","y.head(1)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>DEATH_EVENT</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   DEATH_EVENT\n","0            1"]},"metadata":{"tags":[]},"execution_count":69}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Q0R58pYB9J68","executionInfo":{"status":"ok","timestamp":1626037431118,"user_tz":180,"elapsed":189,"user":{"displayName":"Eliane Somavilla","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghy_NFVbfAPw__SCssozvPZEBaCTpwRMETXKEV--g=s64","userId":"12870892689360984547"}},"outputId":"b4416533-ff46-4515-ddbd-766a918b4087"},"source":["#api model_selection  do sklearn faz a separação dos dados de treino e de teste\n","from sklearn.model_selection import train_test_split\n","#os dois primeiros parametros referem ao conjunto de variaveis independentes, variaveis  dependentes, o tamanho do conjunto de teste (comum 20% ou seja, 0.2) e o random_state refere-se a iniciação dos theta0 e theta1 (comum iniciar com zero)\n","#.values transforma os dados em um array/matriz (outro objeto). As APIS que implementam as equações trabalham apenas com objetos arrays/matriz\n","X_treino, X_teste, y_treino, y_teste = train_test_split(X.values,y.values, test_size=0.2, random_state = 0)\n","\n","#shape para ver o formato do X do y e o formato total da amostra\n","X_treino.shape,X_teste.shape,y_treino.shape,y_teste.shape,X.shape"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["((239, 10), (60, 10), (239, 1), (60, 1), (299, 10))"]},"metadata":{"tags":[]},"execution_count":70}]},{"cell_type":"code","metadata":{"id":"O-VIwRn59MpB"},"source":["#normalizar as variaveis para  escalar e aproximar os valores  do conjunto X\n","from sklearn.preprocessing import StandardScaler\n","sc = StandardScaler()\n","X_train = sc.fit_transform(X_treino)\n","X_test = sc.transform(X_teste)\n","#X_test"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"WqB8b8l9wvg3","executionInfo":{"status":"ok","timestamp":1626037431120,"user_tz":180,"elapsed":189,"user":{"displayName":"Eliane Somavilla","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghy_NFVbfAPw__SCssozvPZEBaCTpwRMETXKEV--g=s64","userId":"12870892689360984547"}},"outputId":"aa6996b4-8b0c-4dc8-df4f-a6c370f7e297"},"source":["#a api linear_model do sklearn faz o treinamento, o LinearRegression faz o treinamento de forma linear. Pra ele nao importa se é uma ou N variaveis, entao dá pra usar na regressão multivariada\n","from sklearn.linear_model import LinearRegression\n","\n","modelo_mult = LinearRegression()\n","#passa o conjunto de treinamento para o objeto 'modelo' e realiza o treinamento\n","modelo_mult.fit(X_train,y_treino)\n","y_pred_multvar = modelo_mult.predict(X_test)\n","\n","#para medir a acurácia usar a api metrics, especificamente a função r2_score\n","from sklearn.metrics import r2_score\n","#acurácia do conjunto de teste\n","r2_score(y_teste,y_pred_multvar)\n"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.15641269919351364"]},"metadata":{"tags":[]},"execution_count":72}]},{"cell_type":"markdown","metadata":{"id":"A1isoyTUWV27"},"source":["# **Regressão Polinomial**"]},{"cell_type":"code","metadata":{"id":"D-0A35jDWXa6","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1626037942150,"user_tz":180,"elapsed":475,"user":{"displayName":"Eliane Somavilla","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghy_NFVbfAPw__SCssozvPZEBaCTpwRMETXKEV--g=s64","userId":"12870892689360984547"}},"outputId":"5c11568e-60d3-4751-80c6-ebb6fd2d18f8"},"source":["# importando o PolynomialFeatures para elevar ao grau desejado \n","#operação executada apenass com X_treino\n","from sklearn.preprocessing import PolynomialFeatures\n","# conforme muda o degree, muda o grau do polinomio. O degree 3 foi o melhor resultado\n","poly = PolynomialFeatures(degree=3)\n","X_poly = poly.fit_transform(X_train)\n","\n","X_poly"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[ 1.        ,  1.70455927, -0.89274435, ...,  0.01192544,\n","         0.19353867,  3.14094996],\n","       [ 1.        , -0.92576852, -0.89274435, ...,  1.35428175,\n","         2.06245756,  3.14094996],\n","       [ 1.        , -1.35001494, -0.89274435, ..., -2.29432129,\n","         0.85466636, -0.31837502],\n","       ...,\n","       [ 1.        ,  2.0439564 ,  1.1201415 , ..., -0.0648132 ,\n","         0.14364855, -0.31837502],\n","       [ 1.        , -0.07727569, -0.89274435, ...,  0.13900727,\n","         0.66076839,  3.14094996],\n","       [ 1.        ,  0.77121715,  1.1201415 , ...,  4.92071539,\n","         3.93137646,  3.14094996]])"]},"metadata":{"tags":[]},"execution_count":49}]},{"cell_type":"code","metadata":{"id":"XKK2sqoyWek_"},"source":["from sklearn.linear_model import LinearRegression\n","\n","modelo_pol = LinearRegression()\n","modelo_pol.fit(X_poly,y_treino)\n","y_pred = modelo_pol.predict(X_poly)\n","y_pred"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XrB8RTg4Wjss","executionInfo":{"status":"ok","timestamp":1626037942743,"user_tz":180,"elapsed":78,"user":{"displayName":"Eliane Somavilla","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghy_NFVbfAPw__SCssozvPZEBaCTpwRMETXKEV--g=s64","userId":"12870892689360984547"}},"outputId":"f3e930cb-1d64-454d-9dda-caa05d485181"},"source":["\n","#para medir a acurácia usar a api metrics, especificamente a função r2_score\n","from sklearn.metrics import r2_score\n","#acurácia do conjunto de teste\n","r2_score(y_treino,y_pred)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.9430477807728954"]},"metadata":{"tags":[]},"execution_count":51}]},{"cell_type":"markdown","metadata":{"id":"rmAjbxIoxl_i"},"source":["## **Analisando as melhores features (variáveis independentes) - Regressão Polinomial**"]},{"cell_type":"code","metadata":{"id":"o6-Sa04YtOTy","colab":{"base_uri":"https://localhost:8080/","height":490},"executionInfo":{"status":"ok","timestamp":1626037942747,"user_tz":180,"elapsed":74,"user":{"displayName":"Eliane Somavilla","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghy_NFVbfAPw__SCssozvPZEBaCTpwRMETXKEV--g=s64","userId":"12870892689360984547"}},"outputId":"ff63e544-5d06-483b-91e2-3b7fd281a5e7"},"source":["from sklearn.linear_model import LinearRegression\n","\n","modelo_pol = LinearRegression()\n","#Remove recursivamente os atributos e constrói o modelo com os atributos remanescentes\n","from sklearn.feature_selection import RFE\n","\n","#avaliação das melhores features\n","rfe = RFE(modelo_pol, 10)\n","fit = rfe.fit(X_train, y_treino)\n","\n","# Mostrando o número de features:\n","print (\"Número de features: {}\".format(fit.n_features_))  \n","\n","# Visualizando os indices das features (variáveis independentes) mais importantes\n","cols = fit.get_support(indices=True)\n","df.iloc[:,cols]\n"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Número de features: 10\n"],"name":"stdout"},{"output_type":"stream","text":["/usr/local/lib/python3.7/dist-packages/sklearn/utils/validation.py:760: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  y = column_or_1d(y, warn=True)\n"],"name":"stderr"},{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>anaemia</th>\n","      <th>creatinine_phosphokinase</th>\n","      <th>diabetes</th>\n","      <th>ejection_fraction</th>\n","      <th>high_blood_pressure</th>\n","      <th>platelets</th>\n","      <th>serum_creatinine</th>\n","      <th>serum_sodium</th>\n","      <th>sex</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>75.0</td>\n","      <td>0</td>\n","      <td>582</td>\n","      <td>0</td>\n","      <td>20</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1.9</td>\n","      <td>130</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>55.0</td>\n","      <td>0</td>\n","      <td>7861</td>\n","      <td>0</td>\n","      <td>38</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1.1</td>\n","      <td>136</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>65.0</td>\n","      <td>0</td>\n","      <td>146</td>\n","      <td>0</td>\n","      <td>20</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1.3</td>\n","      <td>129</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>50.0</td>\n","      <td>1</td>\n","      <td>111</td>\n","      <td>0</td>\n","      <td>20</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1.9</td>\n","      <td>137</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>65.0</td>\n","      <td>1</td>\n","      <td>160</td>\n","      <td>1</td>\n","      <td>20</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>2.7</td>\n","      <td>116</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>294</th>\n","      <td>62.0</td>\n","      <td>0</td>\n","      <td>61</td>\n","      <td>1</td>\n","      <td>38</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1.1</td>\n","      <td>143</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>295</th>\n","      <td>55.0</td>\n","      <td>0</td>\n","      <td>1820</td>\n","      <td>0</td>\n","      <td>38</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1.2</td>\n","      <td>139</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>296</th>\n","      <td>45.0</td>\n","      <td>0</td>\n","      <td>2060</td>\n","      <td>1</td>\n","      <td>60</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0.8</td>\n","      <td>138</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>297</th>\n","      <td>45.0</td>\n","      <td>0</td>\n","      <td>2413</td>\n","      <td>0</td>\n","      <td>38</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1.4</td>\n","      <td>140</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>298</th>\n","      <td>50.0</td>\n","      <td>0</td>\n","      <td>196</td>\n","      <td>0</td>\n","      <td>45</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1.6</td>\n","      <td>136</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>299 rows × 10 columns</p>\n","</div>"],"text/plain":["      age  anaemia  ...  serum_sodium  sex\n","0    75.0        0  ...           130    1\n","1    55.0        0  ...           136    1\n","2    65.0        0  ...           129    1\n","3    50.0        1  ...           137    1\n","4    65.0        1  ...           116    0\n","..    ...      ...  ...           ...  ...\n","294  62.0        0  ...           143    1\n","295  55.0        0  ...           139    0\n","296  45.0        0  ...           138    0\n","297  45.0        0  ...           140    1\n","298  50.0        0  ...           136    1\n","\n","[299 rows x 10 columns]"]},"metadata":{"tags":[]},"execution_count":52}]},{"cell_type":"markdown","metadata":{"id":"EOtkeHMvzy0d"},"source":["## **Treinando e avaliando novamente o modelo após avaliação de features**"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":419},"id":"RS37rnsDOiuw","executionInfo":{"status":"ok","timestamp":1626037942749,"user_tz":180,"elapsed":64,"user":{"displayName":"Eliane Somavilla","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghy_NFVbfAPw__SCssozvPZEBaCTpwRMETXKEV--g=s64","userId":"12870892689360984547"}},"outputId":"6748f5f7-151e-430f-f504-9ebec90a22f5"},"source":["#váriáveis dependentes sem o tempo de acompanhamento e o genero dos pacientes\n","\n","X1 = df.iloc[:,0:9]\n","X2 = df.iloc[:,10:11]\n","X = pd.concat([X1,X2],axis=1)\n","X"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>anaemia</th>\n","      <th>creatinine_phosphokinase</th>\n","      <th>diabetes</th>\n","      <th>ejection_fraction</th>\n","      <th>high_blood_pressure</th>\n","      <th>platelets</th>\n","      <th>serum_creatinine</th>\n","      <th>serum_sodium</th>\n","      <th>smoking</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>75.0</td>\n","      <td>0</td>\n","      <td>582</td>\n","      <td>0</td>\n","      <td>20</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1.9</td>\n","      <td>130</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>55.0</td>\n","      <td>0</td>\n","      <td>7861</td>\n","      <td>0</td>\n","      <td>38</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1.1</td>\n","      <td>136</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>65.0</td>\n","      <td>0</td>\n","      <td>146</td>\n","      <td>0</td>\n","      <td>20</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1.3</td>\n","      <td>129</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>50.0</td>\n","      <td>1</td>\n","      <td>111</td>\n","      <td>0</td>\n","      <td>20</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1.9</td>\n","      <td>137</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>65.0</td>\n","      <td>1</td>\n","      <td>160</td>\n","      <td>1</td>\n","      <td>20</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>2.7</td>\n","      <td>116</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>294</th>\n","      <td>62.0</td>\n","      <td>0</td>\n","      <td>61</td>\n","      <td>1</td>\n","      <td>38</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1.1</td>\n","      <td>143</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>295</th>\n","      <td>55.0</td>\n","      <td>0</td>\n","      <td>1820</td>\n","      <td>0</td>\n","      <td>38</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1.2</td>\n","      <td>139</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>296</th>\n","      <td>45.0</td>\n","      <td>0</td>\n","      <td>2060</td>\n","      <td>1</td>\n","      <td>60</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0.8</td>\n","      <td>138</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>297</th>\n","      <td>45.0</td>\n","      <td>0</td>\n","      <td>2413</td>\n","      <td>0</td>\n","      <td>38</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1.4</td>\n","      <td>140</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>298</th>\n","      <td>50.0</td>\n","      <td>0</td>\n","      <td>196</td>\n","      <td>0</td>\n","      <td>45</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1.6</td>\n","      <td>136</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>299 rows × 10 columns</p>\n","</div>"],"text/plain":["      age  anaemia  ...  serum_sodium  smoking\n","0    75.0        0  ...           130        0\n","1    55.0        0  ...           136        0\n","2    65.0        0  ...           129        1\n","3    50.0        1  ...           137        0\n","4    65.0        1  ...           116        0\n","..    ...      ...  ...           ...      ...\n","294  62.0        0  ...           143        1\n","295  55.0        0  ...           139        0\n","296  45.0        0  ...           138        0\n","297  45.0        0  ...           140        1\n","298  50.0        0  ...           136        1\n","\n","[299 rows x 10 columns]"]},"metadata":{"tags":[]},"execution_count":53}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":80},"id":"S2tjR4lFOn6o","executionInfo":{"status":"ok","timestamp":1626037942750,"user_tz":180,"elapsed":60,"user":{"displayName":"Eliane Somavilla","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghy_NFVbfAPw__SCssozvPZEBaCTpwRMETXKEV--g=s64","userId":"12870892689360984547"}},"outputId":"fa743e49-c489-4510-dbb5-a1048e2f7362"},"source":["#váriáveis independentes\n","\n","y = df.iloc[:,12:13]\n","y.head(1)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>DEATH_EVENT</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   DEATH_EVENT\n","0            1"]},"metadata":{"tags":[]},"execution_count":54}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"tcYSimW4OtxB","executionInfo":{"status":"ok","timestamp":1626037942751,"user_tz":180,"elapsed":51,"user":{"displayName":"Eliane Somavilla","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghy_NFVbfAPw__SCssozvPZEBaCTpwRMETXKEV--g=s64","userId":"12870892689360984547"}},"outputId":"471f590e-3d2c-4d5f-c396-097b2d9c2922"},"source":["#api model_selection  do sklearn faz a separação dos dados de treino e de teste\n","from sklearn.model_selection import train_test_split\n","#os dois primeiros parametros referem ao conjunto de variaveis independentes, variaveis  dependentes, o tamanho do conjunto de teste (comum 20% ou seja, 0.2) e o random_state refere-se a iniciação dos theta0 e theta1 (comum iniciar com zero)\n","#.values transforma os dados em um array/matriz (outro objeto). As APIS que implementam as equações trabalham apenas com objetos arrays/matriz\n","X_treino, X_teste, y_treino, y_teste = train_test_split(X.values,y.values, test_size=0.2, random_state = 0)\n","\n","#shape para ver o formato do X do y e o formato total da amostra\n","X_treino.shape,X_teste.shape,y_treino.shape,y_teste.shape,X.shape"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["((239, 10), (60, 10), (239, 1), (60, 1), (299, 10))"]},"metadata":{"tags":[]},"execution_count":55}]},{"cell_type":"code","metadata":{"id":"T3pBDL0pO0fF"},"source":["#normalizar as variaveis para  escalar e aproximar os valores  do conjunto X\n","from sklearn.preprocessing import StandardScaler\n","sc = StandardScaler()\n","X_train = sc.fit_transform(X_treino)\n","X_test = sc.transform(X_teste)\n","#X_test"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JJVjzYoaz5oD","executionInfo":{"status":"ok","timestamp":1626037942753,"user_tz":180,"elapsed":49,"user":{"displayName":"Eliane Somavilla","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghy_NFVbfAPw__SCssozvPZEBaCTpwRMETXKEV--g=s64","userId":"12870892689360984547"}},"outputId":"e2843900-9f8d-4699-adaf-132e93265b69"},"source":["# importando o PolynomialFeatures para elevar ao grau desejado \n","#operação executada apenass com X_treino\n","from sklearn.preprocessing import PolynomialFeatures\n","# conforme muda o degree, muda o grau do polinomio. O degree 3 foi o melhor resultado\n","poly = PolynomialFeatures(degree=3)\n","X_poly = poly.fit_transform(X_train)\n","\n","from sklearn.linear_model import LinearRegression\n","\n","modelo_pol = LinearRegression()\n","modelo_pol.fit(X_poly,y_treino)\n","y_pred = modelo_pol.predict(X_poly)\n","\n","\n","#para medir a acurácia usar a api metrics, especificamente a função r2_score\n","from sklearn.metrics import r2_score\n","#acurácia do conjunto de teste\n","r2_score(y_treino,y_pred)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.9430477807728954"]},"metadata":{"tags":[]},"execution_count":57}]},{"cell_type":"markdown","metadata":{"id":"z_MJwGfkYcR9"},"source":["# **Matriz de Confusão para avaliação classificatória**"]},{"cell_type":"code","metadata":{"id":"COb_5UizPUZ8"},"source":["#Matriz de confusão contabiliza se o valor previsto bateu com o valor real (verdadeiro positivo/verdadeiro negativo e falso positivo/falso negativo)\n","from sklearn.metrics import confusion_matrix\n","\n","cm_knn = confusion_matrix(y_teste,y_pred_knn)\n","cm_svm = confusion_matrix(y_teste,y_pred_svm)\n","cm_rf = confusion_matrix(y_teste,y_pred_rf)\n","cm_log = confusion_matrix(y_teste,y_pred_log)\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"InqXk2UZPcWE","executionInfo":{"status":"ok","timestamp":1626040013421,"user_tz":180,"elapsed":57,"user":{"displayName":"Eliane Somavilla","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghy_NFVbfAPw__SCssozvPZEBaCTpwRMETXKEV--g=s64","userId":"12870892689360984547"}},"outputId":"fb104fe6-e47e-4cad-b872-ef76287582a4"},"source":["#calculo da acurácia usando matriz de confusão - KNN\n","acc_knn = (cm_knn[0,0]+cm_knn[1,1])/cm_knn.sum()\n","cm_knn\n"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[36,  1],\n","       [20,  3]])"]},"metadata":{"tags":[]},"execution_count":379}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Tz1YXR85Rxfq","executionInfo":{"status":"ok","timestamp":1626040013423,"user_tz":180,"elapsed":55,"user":{"displayName":"Eliane Somavilla","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghy_NFVbfAPw__SCssozvPZEBaCTpwRMETXKEV--g=s64","userId":"12870892689360984547"}},"outputId":"408b2ab6-9de9-4b02-d418-c725f298a9d0"},"source":["#calculo da acurácia usando matriz de confusão - SVM\n","acc_svm = (cm_svm[0,0]+cm_svm[1,1])/cm_svm.sum()\n","cm_svm"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[33,  4],\n","       [11, 12]])"]},"metadata":{"tags":[]},"execution_count":380}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"tWGMdsqWSmGE","executionInfo":{"status":"ok","timestamp":1626040013424,"user_tz":180,"elapsed":50,"user":{"displayName":"Eliane Somavilla","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghy_NFVbfAPw__SCssozvPZEBaCTpwRMETXKEV--g=s64","userId":"12870892689360984547"}},"outputId":"be65199c-9195-4b4a-d910-860a78635256"},"source":["#calculo da acurácia usando matriz de confusão - RFC\n","acc_rf = (cm_rf[0,0]+cm_rf[1,1])/cm_rf.sum()\n","cm_rf"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[32,  5],\n","       [16,  7]])"]},"metadata":{"tags":[]},"execution_count":381}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"iI3PXdK3TC-A","executionInfo":{"status":"ok","timestamp":1626040013425,"user_tz":180,"elapsed":43,"user":{"displayName":"Eliane Somavilla","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghy_NFVbfAPw__SCssozvPZEBaCTpwRMETXKEV--g=s64","userId":"12870892689360984547"}},"outputId":"cc0ef6fd-225d-4b5b-ca49-2eae63e169e6"},"source":["#calculo da acurácia usando matriz de confusão - Reg. Logistica\n","acc_log = (cm_log[0,0]+cm_log[1,1])/cm_log.sum()\n","cm_log"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[35,  2],\n","       [15,  8]])"]},"metadata":{"tags":[]},"execution_count":382}]},{"cell_type":"code","metadata":{"id":"SrcW7g1JPoAx","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1626040013426,"user_tz":180,"elapsed":29,"user":{"displayName":"Eliane Somavilla","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghy_NFVbfAPw__SCssozvPZEBaCTpwRMETXKEV--g=s64","userId":"12870892689360984547"}},"outputId":"b638dc30-8429-47e4-bce2-7e74efa7d2e3"},"source":["# imprimindo a acurácia\n","print('Knn: ', acc_knn)\n","print('SVM: ', acc_svm)\n","print('Random Fortest: ', acc_rf)\n","print('Logistic Regression: ', acc_log)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Knn:  0.65\n","SVM:  0.75\n","Random Fortest:  0.65\n","Logistic Regression:  0.7166666666666667\n"],"name":"stdout"}]}]}